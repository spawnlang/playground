{
  "version": 3,
  "sources": ["../src/spawn.ts", "../src/spawn-hint.ts", "../src/Repositories/SharedCodeRepository.ts", "../src/Repositories/TextCodeRepository.ts", "../src/Repositories/LocalCodeRepository.ts", "../src/Repositories/Base64CodeRepository.ts", "../src/Repositories/GithubGistCodeRepository.ts", "../src/Repositories/CodeRepositoryManager.ts", "../src/QueryParams.ts", "../src/HelpManager.ts", "../src/RunConfigurationManager/RunConfigurationManager.ts", "../src/Examples/examples.ts", "../src/Examples/ExamplesManager.ts", "../src/clipboard_util.ts", "../src/CodeRunner/CodeRunner.ts", "../src/Editor/Editor.ts", "../src/themes/Dark.ts", "../src/themes/Light.ts", "../src/ThemeManager/ThemeManager.ts", "../node_modules/entities/lib/esm/generated/generated/decode-data-html.ts", "../node_modules/entities/lib/esm/generated/generated/decode-data-xml.ts", "../node_modules/entities/lib/esm/decode_codepoint.ts", "../node_modules/entities/lib/esm/decode.ts", "../node_modules/entities/lib/esm/generated/generated/encode-html.ts", "../node_modules/entities/lib/esm/escape.ts", "../node_modules/entities/lib/esm/index.ts", "../src/Ansi/ansi.ts", "../src/Terminal/Terminal.ts", "../src/TipsManager.ts", "../src/Playground.ts", "../src/main.ts"],
  "sourcesContent": ["import {EditorConfiguration, Mode, StringStream} from \"codemirror\"\n\ntype Quota = \"'\" | \"\\\"\" | \"`\"\ntype Tokenizer = (stream: StringStream, state: ModeState) => string | null\n\ninterface ModeState {\n    context: Context\n\n    /**\n     * Current tokenizer function or null.\n     */\n    tokenize: Tokenizer | null\n\n    /**\n     * Current indentation level.\n     */\n    indention: number\n\n    /**\n     * Whenever current position is a start of line.\n     */\n    startOfLine: boolean\n}\n\nclass Context {\n    constructor(\n        public indentation: number,\n        public column: number,\n        public type: string,\n        public align: boolean | null,\n        public prev?: Context,\n        /**\n         * Set of imports in the current context.\n         * Used for highlighting import names in code.\n         */\n        public knownImports: Set<string> = new Set()) {\n    }\n\n    /**\n     * Whenever current position inside a string.\n     */\n    insideString: boolean = false\n\n    /**\n     * Current quotation mark.\n     * Valid only when insideString is true.\n     */\n    stringQuote: Quota | null = null\n\n    /**\n     * Whenever next token expected to be an import name.\n     * Used for highlighting import names in import statements.\n     */\n    expectedImportName: boolean = false\n}\n\nexport const keywords: Set<string> = new Set<string>([\n    \"as\",\n    \"assert\",\n    \"break\",\n    \"const\",\n    \"continue\",\n    \"defer\",\n    \"else\",\n    \"enum\",\n    \"fn\",\n    \"for\",\n    \"goto\",\n    \"if\",\n    \"import\",\n    \"in\",\n    \"interface\",\n    \"is\",\n    \"match\",\n    \"module\",\n    \"mut\",\n    \"none\",\n    \"or\",\n    \"pub\",\n    \"return\",\n    \"select\",\n    \"struct\",\n    \"spawn\",\n    \"type\",\n    \"union\",\n    \"unsafe\",\n    \"test\",\n    \"var\",\n])\n\nexport const pseudoKeywords: Set<string> = new Set<string>([\n    \"chan\",\n])\n\nexport const atoms: Set<string> = new Set<string>([\n    \"true\",\n    \"false\",\n    \"nil\",\n])\n\nexport const builtinTypes: Set<string> = new Set<string>([\n    \"bool\",\n    \"string\",\n    \"rune\",\n    \"i8\",\n    \"i16\",\n    \"int\",\n    \"i32\",\n    \"i64\",\n    \"i128\",\n    \"isize\",\n    \"u8\",\n    \"u16\",\n    \"u32\",\n    \"u64\",\n    \"u128\",\n    \"usize\",\n    \"f32\",\n    \"f64\",\n    \"void\",\n    \"unit\",\n    \"any\",\n])\n\n// @ts-ignore\nCodeMirror.defineMode(\"spawn\", (config: EditorConfiguration): Mode<ModeState> => {\n    const indentUnit = config.indentUnit ?? 0\n\n    const isOperatorChar = /[+\\-*&^%:=<>!?|\\/]/\n\n    let curPunc: string | null = null\n\n    function eatIdentifier(stream: StringStream): string {\n        stream.eatWhile(/[\\w$_\\xa1-\\uffff]/)\n        return stream.current()\n    }\n\n    function tokenBase(stream: StringStream, state: ModeState): string | null {\n        const ch = stream.next()\n        if (ch === null) {\n            return null\n        }\n\n        if (state.context.insideString && ch === \"}\") {\n            stream.eat(\"}\")\n            state.tokenize = tokenString(state.context.stringQuote)\n            return \"end-interpolation\"\n        }\n\n        if (ch === \"\\\"\" || ch === \"'\" || ch === \"`\") {\n            state.tokenize = tokenString(ch)\n            return state.tokenize(stream, state)\n        }\n\n        if (ch == \"b\" && stream.peek() == \"`\") {\n            stream.next()\n            state.tokenize = tokenString(\"`\")\n            return \"string\"\n        }\n\n        // r'foo' or c'foo'\n        // r\"foo\" or c\"foo\"\n        if ((ch === \"r\" || ch === \"c\") && (stream.peek() == \"\\\"\" || stream.peek() == \"'\")) {\n            const next = stream.next()\n            if (next === null) {\n                return \"string\"\n            }\n            state.tokenize = tokenRawString(next as Quota)\n            return \"string\"\n        }\n\n        if (ch === \".\") {\n            if (!stream.match(/^[0-9]+([eE][\\-+]?[0-9]+)?/)) {\n                return \"operator\"\n            }\n        }\n\n        // #[track_caller]\n        // #[align(5)]\n        if (ch === \"#\" && stream.peek() == \"[\") {\n            stream.match(/^[^\\]]*]/)\n            return \"attribute\"\n        }\n\n        if (/[\\d.]/.test(ch)) {\n            if (ch === \"0\") {\n                stream.match(/^[xX][0-9a-fA-F_]+/) ||\n                stream.match(/^o[0-7_]+/) ||\n                stream.match(/^b[0-1_]+/)\n            } else {\n                stream.match(/^[0-9_]*\\.?[0-9_]*([eE][\\-+]?[0-9_]+)?/)\n            }\n            return \"number\"\n        }\n        if (/[\\[\\]{}(),;:.]/.test(ch)) {\n            curPunc = ch\n            return null\n        }\n        if (ch === \"/\") {\n            if (stream.eat(\"*\")) {\n                state.tokenize = tokenComment\n                return tokenComment(stream, state)\n            }\n            if (stream.eat(\"/\")) {\n                stream.skipToEnd()\n                return \"comment\"\n            }\n        }\n        if (isOperatorChar.test(ch)) {\n            stream.eatWhile(isOperatorChar)\n            return \"operator\"\n        }\n\n        if (ch === \"$\") {\n            eatIdentifier(stream)\n            return \"compile-time-identifier\"\n        }\n\n        stream.backUp(2)\n        const wasDot = stream.next() === \".\"\n        stream.next()\n\n        const cur = eatIdentifier(stream)\n        if (cur === \"import\") {\n            state.context.expectedImportName = true\n        }\n\n        if (keywords.has(cur)) return \"keyword\"\n\n        if (cur == \"map\" && stream.peek() == \"[\") {\n            return \"keyword\"\n        }\n\n        if (pseudoKeywords.has(cur)) return \"keyword\"\n        if (atoms.has(cur)) return \"atom\"\n\n        if (!wasDot) {\n            // don't highlight `foo.i32()`\n            //                      ^^^ as builtin\n            if (builtinTypes.has(cur)) return \"builtin\"\n        }\n\n        if (cur.length > 0 && cur[0].toUpperCase() === cur[0]) {\n            return \"type\"\n        }\n\n        const next = stream.peek()\n        if (next === \"(\" || next === \"<\") {\n            return \"function\"\n        }\n\n        if (next === \"[\") {\n            stream.next()\n            const after = stream.next()\n            stream.backUp(2)\n            if (after != null && after.match(/[A-Z]/i)) {\n                return \"function\"\n            }\n        }\n\n        // highlight only last part\n        // example:\n        //   import foo.boo\n        //              ^^^ - only this part will be highlighted\n        if (state.context.expectedImportName && stream.peek() !== \".\") {\n            state.context.expectedImportName = false\n            if (state.context.knownImports === undefined) {\n                state.context.knownImports = new Set()\n            }\n            state.context.knownImports.add(cur)\n            return \"import-name\"\n        }\n\n        if (wasDot) {\n            return \"property\"\n        }\n\n        // highlight only identifier with dot after it\n        // example:\n        //   import foo\n        //   import bar\n        //\n        //   foo.bar\n        //   ^^^ - only this part will be highlighted\n        if (state.context.knownImports.has(cur) && stream.peek() == \".\") {\n            return \"import-name\"\n        }\n\n        return \"variable\"\n    }\n\n    function tokenLongInterpolation(stream: StringStream, state: ModeState) {\n        if (stream.match(\"}\")) {\n            state.tokenize = tokenString(state.context.stringQuote)\n            return \"end-interpolation\"\n        }\n        state.tokenize = tokenBase\n        return state.tokenize(stream, state)\n    }\n\n    function tokenNextInterpolation(stream: StringStream, state: ModeState) {\n        let next = stream.next()\n        if (next === \"$\" && stream.eat(\"{\")) {\n            state.tokenize = tokenLongInterpolation\n            return \"start-interpolation\"\n        }\n\n        return \"string\"\n    }\n\n    function tokenNextEscape(stream: StringStream, state: ModeState) {\n        let next = stream.next()\n        if (next === \"\\\\\") {\n            stream.next()\n            state.tokenize = tokenString(state.context.stringQuote)\n            // we already know that next char is valid escape\n            return \"valid-escape\"\n        }\n\n        return \"string\"\n    }\n\n    function isValidEscapeChar(ch: string) {\n        return ch === \"n\" || ch === \"t\" || ch === \"r\" || ch === \"\\\\\" || ch === \"\\\"\" || ch === \"\\'\" || ch === \"0\"\n    }\n\n    function tokenString(quote: Quota | null) {\n        return function (stream: StringStream, state: ModeState) {\n            state.context.insideString = true\n            state.context.stringQuote = quote\n\n            let next: string | null = \"\"\n            let escaped = false\n            let end = false\n\n            while ((next = stream.next()) != null) {\n                if (next === quote && !escaped) {\n                    end = true\n                    break\n                }\n                if (next === \"$\" && !escaped && stream.eat(\"{\")) {\n                    state.tokenize = tokenNextInterpolation\n                    stream.backUp(2)\n                    return \"string\"\n                }\n                if (escaped && isValidEscapeChar(next)) {\n                    stream.backUp(2)\n                    state.tokenize = tokenNextEscape\n                    return \"string\"\n                }\n                escaped = !escaped && next === \"\\\\\"\n            }\n\n            if (end || escaped) {\n                state.tokenize = tokenBase\n            }\n\n            state.context.insideString = false\n            state.context.stringQuote = null\n            return \"string\"\n        }\n    }\n\n    function tokenRawString(quote: Quota | null) {\n        return function (stream: StringStream, state: ModeState) {\n            state.context.insideString = true\n            state.context.stringQuote = quote\n\n            let next: string | null = \"\"\n            let escaped = false\n            let end = false\n\n            while ((next = stream.next()) != null) {\n                if (next === quote && !escaped) {\n                    end = true\n                    break\n                }\n                escaped = !escaped && next === \"\\\\\"\n            }\n\n            if (end || escaped) {\n                state.tokenize = tokenBase\n            }\n\n            state.context.insideString = false\n            state.context.stringQuote = null\n            return \"string\"\n        }\n    }\n\n    function tokenComment(stream: StringStream, state: ModeState) {\n        let maybeEnd = false\n        let ch: string | null\n        while (ch = stream.next()) {\n            if (ch === \"/\" && maybeEnd) {\n                state.tokenize = tokenBase\n                break\n            }\n            maybeEnd = (ch === \"*\")\n        }\n        return \"comment\"\n    }\n\n    function pushContext(state: ModeState, column: number, type: string) {\n        return state.context = new Context(state.indention, column, type, null, state.context, state.context.knownImports)\n    }\n\n    function popContext(state: ModeState) {\n        if (!state.context.prev) return\n        const t = state.context.type\n        if (t === \")\" || t === \"]\" || t === \"}\")\n            state.indention = state.context.indentation\n        state.context = state.context.prev\n        return state.context\n    }\n\n    return {\n        startState: function (): ModeState {\n            return {\n                tokenize: null,\n                context: new Context(0, 0, \"top\", false),\n                indention: 0,\n                startOfLine: true,\n            }\n        },\n\n        token: function (stream: StringStream, state: ModeState): string | null {\n            const ctx = state.context\n            if (stream.sol()) {\n                if (ctx.align == null) {\n                    ctx.align = false\n                }\n                state.indention = stream.indentation()\n                state.startOfLine = true\n            }\n            if (stream.eatSpace()) {\n                return null\n            }\n            curPunc = null\n            const style = (state.tokenize || tokenBase)(stream, state)\n            if (style === \"comment\") {\n                return style\n            }\n            if (ctx.align == null) {\n                ctx.align = true\n            }\n\n            if (curPunc === \"{\") pushContext(state, stream.column(), \"}\")\n            else if (curPunc === \"[\") pushContext(state, stream.column(), \"]\")\n            else if (curPunc === \"(\") pushContext(state, stream.column(), \")\")\n            else if (curPunc === \"}\" && ctx.type === \"}\") popContext(state)\n            else if (curPunc === ctx.type) popContext(state)\n            state.startOfLine = false\n            return style\n        },\n\n        indent: function (state: ModeState, textAfter: string): number {\n            if (state.tokenize !== tokenBase && state.tokenize != null) {\n                return 0\n            }\n\n            if (state.context.type == \"top\") {\n                return 0\n            }\n\n            const ctx = state.context\n            const firstChar = textAfter.charAt(0)\n\n            const closing = firstChar === ctx.type\n            if (ctx.align) {\n                return ctx.column + (closing ? 0 : 1)\n            }\n\n            return ctx.indentation + (closing ? 0 : indentUnit)\n        },\n\n        // @ts-ignore\n        electricChars: \"{}):\",\n        // @ts-ignore\n        closeBrackets: \"()[]{}''\\\"\\\"``\",\n        fold: \"brace\",\n        blockCommentStart: \"/*\",\n        blockCommentEnd: \"*/\",\n        lineComment: \"//\",\n    }\n})\n\n// @ts-ignore\nCodeMirror.defineMIME(\"text/x-spawn\", \"spawn\")\n", "import {atoms, builtinTypes, keywords, pseudoKeywords} from \"./spawn\"\nimport {Editor, Position, Token} from \"codemirror\"\n\n// @ts-ignore\nconst Pos = CodeMirror.Pos\n\n/**\n * Describe a completion variant.\n */\ninterface CompletionVariant {\n    /**\n     * The text to be matched and inserted.\n     */\n    text: string,\n\n    /**\n     * The text to be displayed in the completion list.\n     */\n    displayText: string,\n\n    /**\n     * The class name to be applied to the completion list item.\n     * Used to style the completion list item.\n     */\n    className: string\n\n    /**\n     * Grayed out text that is displayed after the `displayText`.\n     */\n    detailsText?: string\n\n    /**\n     * Description of the completion variant displayed at the end of the completion variant.\n     */\n    description?: string\n\n    /**\n     * Action to be executed when the completion variant is selected.\n     */\n    onSelect?: (e: Editor) => void\n}\n\n/**\n * Describe a completions variants.\n */\ninterface CompletionVariants {\n    from: Position;\n    to: Position;\n    list: Array<CompletionVariant | string>;\n}\n\nfunction computeCompletionVariants(editor: Editor): CompletionVariants | null {\n    // some additional information for the current token.\n    let context: Token[] = []\n    // find the token at the cursor\n    const cur = editor.getCursor()\n    let token = editor.getTokenAt(cur)\n\n    const knownImports = new Set<string>()\n    for (let i = 0; i < Math.min(editor.lineCount(), 10); i++) {\n        const lineTokens = editor.getLineTokens(i).filter(tkn => tkn.type != null)\n        if (lineTokens.length > 0 && lineTokens[0].string === \"import\") {\n            knownImports.add(lineTokens[lineTokens.length - 1].string)\n        }\n    }\n\n    const lineTokens = editor.getLineTokens(cur.line)\n    if (lineTokens.length > 0 && lineTokens[0].string === \"import\") {\n        // if the first token is \"import\", then we are in an import statement,\n        // so add this information to context.\n        context.push(lineTokens[0])\n    }\n\n    const len = token.string.length\n    const prevToken = editor.getTokenAt(Pos(cur.line, cur.ch - len))\n    if (token.string === \".\") {\n        context.push(token)\n    }\n    if (prevToken.string === \".\") {\n        context.push(prevToken)\n    }\n\n    if (/\\b(?:string|comment)\\b/.test(token.type ?? \"\")) return null\n\n    // if it's not a 'word-style' token, ignore the token.\n    if (!/^[\\w$_]*$/.test(token.string)) {\n        token = {\n            start: cur.ch, end: cur.ch, string: \"\", state: token.state,\n            type: token.string === \".\" ? \"property\" : null,\n        }\n    } else if (token.end > cur.ch) {\n        token.end = cur.ch\n        token.string = token.string.slice(0, cur.ch - token.start)\n    }\n\n    return {\n        list: getCompletions(editor, token, knownImports, context),\n        from: Pos(cur.line, token.start),\n        to: Pos(cur.line, token.end),\n    }\n}\n\nfunction getCompletions(editor: Editor, token: Token, knownImports: Set<string>, context: Token[]): CompletionVariant[] {\n    const variants: CompletionVariant[] = []\n    const tokenValue = token.string\n\n    function addCompletionVariant(variant: CompletionVariant) {\n        const variantText = variant.text\n\n        // if no matching text, ignore\n        if (!variantText.startsWith(tokenValue)) {\n            return\n        }\n\n        const alreadyContains = variants.find((f) => f.text === variantText)\n        if (!alreadyContains) {\n            variants.push(variant)\n        }\n    }\n\n    if (context && context.length) {\n        const lastToken = context.pop()\n        if (lastToken !== undefined) {\n            // disable completion after dot\n            if (lastToken.string === \".\") {\n                return []\n            }\n        }\n    }\n\n    for (let i = 0; i < editor.lineCount(); i++) {\n        const lineTokens = editor.getLineTokens(i)\n        lineTokens.forEach((tok, index) => {\n            let prev = lineTokens[index - 2] ?? {string: \"\"}\n            if (tok.type === \"function\" && prev.string === \"fn\") {\n                let name = tok.string\n                if (name == 'main') {\n                    return\n                }\n\n                let endSignatureToken = lineTokens.findIndex((t) => t.string === \"{\")\n                let signatureTokens = lineTokens.slice(index + 1, endSignatureToken ?? lineTokens.length)\n                let signature = signatureTokens.map((t) => t.string).join(\"\")\n\n                addCompletionVariant({\n                    text: `${name}()`,\n                    displayText: name,\n                    className: \"completion-function\",\n                    detailsText: signature,\n                    onSelect: backward\n                })\n\n                signatureTokens.forEach(t => {\n                    if (t.type === \"variable\") {\n                        addCompletionVariant({\n                            text: t.string,\n                            displayText: t.string,\n                            className: \"completion-parameter\",\n                        })\n                    }\n                })\n            }\n\n            if (tok.type === \"type\" && prev.string === \"struct\") {\n                addCompletionVariant({\n                    text: `${tok.string}{}`,\n                    displayText: tok.string,\n                    className: \"completion-struct\",\n                    detailsText: \"{}\",\n                    onSelect: backward\n                })\n            }\n\n            if (tok.type === \"type\" && prev.string === \"interface\") {\n                addCompletionVariant({\n                    text: tok.string,\n                    displayText: tok.string,\n                    className: \"completion-interface\",\n                })\n            }\n\n            let next = lineTokens[index + 3] ?? {string: \"\"}\n            if (tok.type === \"variable\" && next.string === \"=\") {\n                addCompletionVariant({\n                    text: tok.string,\n                    displayText: tok.string,\n                    className: \"completion-variable\",\n                })\n            }\n        })\n    }\n\n    knownImports.forEach((text) => {\n        addCompletionVariant({\n            text: text,\n            displayText: text,\n            className: \"completion-module\",\n        })\n    })\n\n    addCompletionVariant({\n        text: \"println()\",\n        displayText: \"println\",\n        detailsText: \"(s ...any)\",\n        className: \"completion-function\",\n        onSelect: backward\n    })\n\n    addCompletionVariant({\n        text: \"print()\",\n        displayText: \"print\",\n        detailsText: \"(s ...any)\",\n        className: \"completion-function\",\n        onSelect: backward\n    })\n\n    addCompletionVariant({\n        text: \"panic()\",\n        displayText: \"panic\",\n        detailsText: \"(msg string)\",\n        className: \"completion-function\",\n        onSelect: backward\n    })\n\n    addCompletionVariant({\n        text: \"error()\",\n        displayText: \"error\",\n        detailsText: \"[TData, TError: Error](err TError) -> ![TData, TError]\",\n        className: \"completion-function\",\n        onSelect: backward\n    })\n\n    addCompletionVariant({\n        text: \"true\",\n        displayText: \"true\",\n        className: \"completion-constant\",\n    })\n\n    addCompletionVariant({\n        text: \"false\",\n        displayText: \"false\",\n        className: \"completion-constant\",\n    })\n\n    addCompletionVariant({\n        text: \"nil\",\n        displayText: \"nil\",\n        className: \"completion-constant\",\n    })\n\n    addCompletionVariant({\n        text: \"none\",\n        displayText: \"none\",\n        className: \"completion-constant\",\n    })\n\n    addCompletionVariant({\n        text: \"or {}\",\n        displayText: \"or \",\n        detailsText: \"{}\",\n        className: \"completion-keyword\",\n        onSelect: backward\n    })\n\n    addCompletionVariant({\n        text: \"spawn fn () {}()\",\n        displayText: \"spawn \",\n        detailsText: \"fn () {}()\",\n        description: \"Spawn a new thread\",\n        className: \"completion-keyword\",\n        onSelect: backwardCount.bind(null, 3)\n    })\n\n    addCompletionVariant({\n        text: \"chan string\",\n        displayText: \"chan \",\n        detailsText: \" <type>\",\n        className: \"completion-keyword\",\n        onSelect: (editor) => {\n            let cursor = editor.getCursor();\n            let startSelection = {\n                line: cursor.line,\n                ch: cursor.ch - 6\n            }\n            let endSelection = {\n                line: startSelection.line,\n                ch: startSelection.ch + 6\n            }\n            editor.setSelection(endSelection, startSelection)\n        }\n    })\n\n    addCompletionVariant({\n        text: \"assert cond, 'assertion failed'\",\n        displayText: \"assert \",\n        detailsText: \"cond, ['message']\",\n        className: \"completion-keyword\",\n        onSelect: (editor) => {\n            let cursor = editor.getCursor();\n            let startSelection = {\n                line: cursor.line,\n                ch: cursor.ch - 24\n            }\n            let endSelection = {\n                line: startSelection.line,\n                ch: startSelection.ch + 4\n            }\n            editor.setSelection(endSelection, startSelection)\n        }\n    })\n\n    keywords.forEach((text) => {\n        if (text === \"spawn\" || text === \"assert\") {\n            return\n        }\n\n        addCompletionVariant({\n            text: text + \" \",\n            displayText: text,\n            className: \"completion-keyword\",\n        })\n    })\n\n    pseudoKeywords.forEach((text) => {\n        addCompletionVariant({\n            text: text + \" \",\n            displayText: text,\n            className: \"completion-keyword\",\n        })\n    })\n\n    atoms.forEach((text) => {\n        addCompletionVariant({\n            text: text,\n            displayText: text,\n            className: \"completion-atom\",\n        })\n    })\n\n    builtinTypes.forEach((text) => {\n        addCompletionVariant({\n            text: text,\n            displayText: text,\n            className: \"completion-type\",\n        })\n    })\n\n    return variants\n}\n\nconst backwardCount = (count: number, editor: Editor) => {\n    let pos = editor.getCursor()\n    pos.ch -= count\n    editor.setCursor(pos)\n}\n\nconst backward = backwardCount.bind(null, 1)\n\nconst hintHelper = (editor: Editor) => computeCompletionVariants(editor)\n\n// @ts-ignore\nCodeMirror.registerHelper(\"hint\", \"spawn\", hintHelper)\n", "import {CodeRepository, CodeSnippet} from \"./interface\";\n\nexport enum SharedCodeRunConfiguration {\n    Run,\n    Test,\n    Cgen,\n}\n\n/**\n * {\n *   \"snippet\": {\n *     \"id\": 3,\n *     \"code\": \"println(100)\",\n *     \"hash\": \"21cf286fdb\",\n *     \"build_arguments\": [],\n *     \"run_arguments\": [],\n *     \"additional\": {}\n *   },\n *   \"found\": false,\n *   \"error\": \"\"\n * }\n */\ntype SharedCodeResponse = {\n    snippet: CodeSnippet\n    found: boolean\n    error: string\n}\n\n/**\n * Shared code repository using the server side SQL storage.\n */\nexport class SharedCodeRepository implements CodeRepository {\n    public static readonly QUERY_PARAM_NAME = \"query\"\n    public static readonly CODE_NOT_FOUND = \"Not found.\"\n\n    private readonly hash: string\n\n    constructor(hash: string) {\n        this.hash = hash\n    }\n\n    saveCode(_: string) {\n        // nothing to do\n    }\n\n    getCode(onReady: (snippet: CodeSnippet) => void) {\n        return this.getSharedCode(onReady)\n    }\n\n    private getSharedCode(onReady: (snippet: CodeSnippet) => void) {\n        const data = new FormData()\n        data.append(\"hash\", this.hash)\n\n        fetch(\"/query\", {\n            method: \"post\",\n            body: data,\n        })\n            .then(resp => resp.json())\n            .then(data => data as SharedCodeResponse)\n            .then(resp => {\n                console.log(resp)\n                if (!resp.found) {\n                    onReady({code: SharedCodeRepository.CODE_NOT_FOUND})\n                    return\n                }\n\n                if (resp.error != \"\") {\n                    console.error(resp.error)\n                    onReady({code: SharedCodeRepository.CODE_NOT_FOUND})\n                    return\n                }\n\n                onReady(resp.snippet)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n}\n", "import {CodeRepository, CodeSnippet} from \"./interface\";\n\nexport class TextCodeRepository implements CodeRepository {\n    constructor(private text: string) {\n    }\n\n    saveCode(_: string): void {\n    }\n\n    getCode(onReady: (snippet: CodeSnippet) => void): void {\n        onReady({code: this.text})\n    }\n}\n", "import {CodeRepository, CodeSnippet} from \"./interface\";\n\n/**\n * Local code repository using the browser's local storage.\n */\nexport class LocalCodeRepository implements CodeRepository {\n    private static readonly LOCAL_STORAGE_KEY = \"code\"\n\n    // language=V\n    public static readonly WELCOME_CODE = `\n// Welcome to the Spawn Playground!\n// Here you can edit, run, and share Spawn code.\n// Let's start with a simple \"Hello, Playground!\" example:\nfn main() {\n    println('Hello, Playground!')\n}\n\n// To run the code, click the \"Run\" button or just press Ctrl + R.\n// To format the code, click the \"Format\" button or just press Ctrl + L.\n\n// More examples are available in top dropdown list.\n// You can find Help for shortcuts in the bottom right corner or just press Ctrl + I.\n// See also change theme button in the top right corner.\n// If you want to learn more about Spawn, visit https://docs.spawnlang.dev/.\n// Join us on Discord: https://discord.gg/dW4ytWQyEY\n// Enjoy!\n`.trimStart()\n\n    saveCode(code: string) {\n        window.localStorage.setItem(LocalCodeRepository.LOCAL_STORAGE_KEY, code)\n    }\n\n    getCode(onReady: (snippet: CodeSnippet) => void) {\n        const localCode = window.localStorage.getItem(LocalCodeRepository.LOCAL_STORAGE_KEY)\n        if (localCode === null || localCode === undefined) {\n            onReady({code: LocalCodeRepository.WELCOME_CODE})\n            return\n        }\n        onReady({code: localCode})\n    }\n}\n", "import {CodeRepository, CodeSnippet} from \"./interface\";\n\nexport class Base64CodeRepository implements CodeRepository {\n    public static readonly QUERY_PARAM_NAME = \"base64\"\n\n    private readonly decodedCode\n\n    constructor(private text: string) {\n        this.decodedCode = atob(text)\n    }\n\n    saveCode(_: string): void {\n    }\n\n    getCode(onReady: (snippet: CodeSnippet) => void): void {\n        onReady({code: this.decodedCode})\n    }\n}\n", "import {CodeRepository, CodeSnippet} from \"./interface\";\n\nexport class GithubGistCodeRepository implements CodeRepository {\n    public static readonly QUERY_PARAM_NAME = \"gist\"\n\n    constructor(private id: string) {\n    }\n\n    saveCode(_: string): void {\n    }\n\n    getCode(onReady: (snippet: CodeSnippet) => void): void {\n        fetch(\"https://api.github.com/gists/\" + this.id, {\n            method: \"get\",\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(resp => resp.json())\n            .then(data => {\n                const files = data.files\n                const firstKey = Object.keys(files)[0];\n                const file = files[firstKey]\n                const url = file.raw_url\n\n                fetch(url, {\n                    method: \"get\",\n                    headers: {\n                        'Content-Type': 'text/plain'\n                    }\n                })\n                    .then(r => r.text())\n                    .then(r => {\n                        onReady({code: r})\n                    })\n                    .catch(err => {\n                        console.log(err)\n                    })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n}\n", "import { CodeRepository } from \"./interface\";\nimport { SharedCodeRepository } from \"./SharedCodeRepository\";\nimport { TextCodeRepository } from \"./TextCodeRepository\";\nimport { LocalCodeRepository } from \"./LocalCodeRepository\";\n\nimport { QueryParams } from \"../QueryParams\";\nimport { PlaygroundConfig } from \"../PlaygroundConfig\";\nimport {Base64CodeRepository} from \"./Base64CodeRepository\"\nimport {GithubGistCodeRepository} from \"./GithubGistCodeRepository\"\n\n/**\n * CodeRepositoryManager is responsible for managing the code repositories.\n */\nexport class CodeRepositoryManager {\n\n    /**\n     * Base on `params` tries to select the appropriate repository to get the code.\n     *\n     * @param params The query parameters.\n     * @param config The playground configuration.\n     * @returns {CodeRepository}\n     */\n    static selectRepository(params: QueryParams, config?: PlaygroundConfig): CodeRepository {\n        if (config !== undefined && config.codeHash !== null && config.codeHash !== undefined) {\n            return new SharedCodeRepository(config.codeHash)\n        }\n\n        if (config !== undefined && config.code !== null && config.code !== undefined) {\n            return new TextCodeRepository(config.code)\n        }\n\n        if (config !== undefined && config.embed !== null && config.embed !== undefined && config.embed) {\n            // By default, editor is empty for embed mode.\n            return new TextCodeRepository(\"\")\n        }\n\n        const repository = new LocalCodeRepository()\n        const hash = params.getURLParameter(SharedCodeRepository.QUERY_PARAM_NAME)\n        if (hash !== null && hash !== undefined) {\n            return new SharedCodeRepository(hash)\n        }\n\n        const base64Code = params.getURLParameter(Base64CodeRepository.QUERY_PARAM_NAME)\n        if (base64Code !== null && base64Code !== undefined) {\n            return new Base64CodeRepository(base64Code)\n        }\n\n        const gistId = params.getURLParameter(GithubGistCodeRepository.QUERY_PARAM_NAME)\n        if (gistId !== null && gistId !== undefined) {\n            return new GithubGistCodeRepository(gistId)\n        }\n\n        return repository\n    }\n}\n", "/**\n * QueryParams is responsible for parsing query params from URL\n * and updating the URL when the params change.\n *\n * @example\n * const queryParams = new QueryParams(window.location.search);\n * queryParams.updateURLParameter('theme', 'dark')\n * // The URL will be updated to: http://localhost:8080/?theme=dark\n */\nexport class QueryParams {\n    public readonly params: URLSearchParams\n\n    /**\n     * @param path - The path to parse (usually `window.location.search`).\n     */\n    constructor(path: string) {\n        this.params = new URLSearchParams(path)\n    }\n\n    /**\n     * Update the URL with the new param.\n     * @param param The param to update.\n     * @param value The new value of the param.\n     */\n    public updateURLParameter(param: string, value: string | null) {\n        const url = QueryParams.updateURLParameter(window.location.href, param, value)\n        window.history.replaceState({}, \"\", url)\n    }\n\n    public getURLParameter(param: string): string | null {\n        return this.params.get(param)\n    }\n\n    private static updateURLParameter(url: string, param: string, value: string | null) {\n        const parsedUrl = new URL(url)\n\n        if (value) {\n            parsedUrl.searchParams.set(param, value)\n        } else {\n            parsedUrl.searchParams.delete(param)\n        }\n\n        return parsedUrl.toString()\n    }\n}\n", "export class HelpManager {\n    // TODO: don't know other way to detect macOS...\n    // noinspection JSDeprecatedSymbols\n    static isMac = navigator.platform.toUpperCase().indexOf(\"MAC\") >= 0\n\n    private containingElement: HTMLElement\n    private readonly element: HTMLElement\n    private readonly helpOverlay!: HTMLElement\n    private readonly showHelpButton!: HTMLElement\n    private readonly closeHelpButton!: HTMLElement\n\n    constructor(containingElement: HTMLElement) {\n        this.containingElement = containingElement\n        this.element = containingElement.getElementsByClassName(\"js-help-wrapper\")[0] as HTMLElement\n\n        if (this.element === null || this.element === undefined) {\n            return\n        }\n\n        this.helpOverlay = this.element.querySelector(\".js-help-overlay\")!\n        this.showHelpButton = this.element.querySelector(\".js-show-help\")!\n        this.closeHelpButton = this.element.querySelector(\".js-close-help\")!\n\n        this.mount()\n    }\n\n    private mount() {\n        if (this.showHelpButton !== undefined) {\n            this.showHelpButton.addEventListener(\"click\", () => {\n                this.toggleHelp()\n            })\n        }\n\n        if (this.helpOverlay !== undefined) {\n            this.helpOverlay.addEventListener(\"click\", () => {\n                this.toggleHelp()\n            })\n        }\n\n        if (this.closeHelpButton !== undefined) {\n            this.closeHelpButton.addEventListener(\"click\", () => {\n                this.toggleHelp()\n            })\n        }\n\n        // Replace shortcut with understandable for OS user:\n        //  - macOS: \u2303\n        //  - Windows/Linux: Ctrl\n        if (!HelpManager.isMac) {\n            const shortcuts = document.querySelectorAll<HTMLElement>(\".js-shortcut kbd.ctrl\")\n            shortcuts.forEach(function (shortcut: HTMLElement) {\n                shortcut.innerText = \"Ctrl\"\n            })\n        }\n    }\n\n    public closeHelp() {\n        if (!this.helpOverlay.classList.contains(\"opened\")) {\n            return\n        }\n        this.toggleHelp()\n    }\n\n    public toggleHelp() {\n        const help = this.containingElement.getElementsByClassName(\"js-help\")[0]\n        help.classList.toggle(\"opened\")\n        this.helpOverlay.classList.toggle(\"opened\")\n    }\n}\n", "import {QueryParams} from \"../QueryParams\";\nimport {SharedCodeRunConfiguration} from \"../Repositories\";\n\nexport enum RunConfigurationType {\n    Run = \"Run\",\n    Test = \"Test\",\n    Cgen = \"Cgen\",\n}\n\nexport function toSharedRunConfiguration(runConfigurationType: string): SharedCodeRunConfiguration {\n    switch (runConfigurationType) {\n        case \"Run\":\n            return SharedCodeRunConfiguration.Run\n        case \"Test\":\n            return SharedCodeRunConfiguration.Test\n        case \"Cgen\":\n            return SharedCodeRunConfiguration.Cgen\n        default:\n            throw new Error(`Unknown run configuration type: ${runConfigurationType}`)\n    }\n}\n\nexport function getRunConfigurationTypeByShared(sharedRunConfiguration: SharedCodeRunConfiguration): RunConfigurationType {\n    switch (sharedRunConfiguration) {\n        case SharedCodeRunConfiguration.Run:\n            return RunConfigurationType.Run\n        case SharedCodeRunConfiguration.Test:\n            return RunConfigurationType.Test\n        case SharedCodeRunConfiguration.Cgen:\n            return RunConfigurationType.Cgen\n        default:\n            return RunConfigurationType.Run\n    }\n}\n\nfunction getRunConfigurationTypeByString(runConfigurationType: string): RunConfigurationType {\n    switch (runConfigurationType) {\n        case \"Run\":\n            return RunConfigurationType.Run\n        case \"Test\":\n            return RunConfigurationType.Test\n        case \"Cgen\":\n            return RunConfigurationType.Cgen\n        default:\n            throw new Error(`Unknown run configuration type: ${runConfigurationType}`)\n    }\n}\n\nexport class RunConfigurationManager {\n    private static readonly QUERY_PARAM_NAME = \"runConfiguration\"\n    private static readonly LOCAL_STORAGE_KEY = \"run-configuration\"\n    private static readonly LOCAL_STORAGE_BUILD_ARGUMENTS_KEY = \"build-arguments\"\n    private static readonly LOCAL_STORAGE_RUN_ARGUMENTS_KEY = \"run-arguments\"\n\n    private readonly queryParams: QueryParams\n    private currentConfiguration: RunConfigurationType = RunConfigurationType.Run\n    private fromQueryParam: boolean = false\n\n    private readonly runButton = document.querySelector(\".js-run__action\")!\n    private readonly runButtonLabel = document.querySelector(\".js-open-run-select .configuration-name\")!\n    private readonly openRunButton = document.querySelector(\".js-open-run-select\")!\n    private readonly configurationsList = document.querySelector(\".js-run-configurations-list\")!\n    private readonly configurationsOverlay = document.querySelector(\".js-run-configurations-list-overlay\")!\n    private readonly openSettingsPopup = document.querySelector(\".js-open-settings-popup\")!\n    private readonly settingsPopup = document.querySelector(\".js-settings-popup\")!\n    private readonly settingsOverlay = document.querySelector(\".js-settings-popup-overlay\")!\n    private readonly configurations = document.querySelectorAll(\".js-configuration\")!\n    private readonly buildArgumentsInput = document.querySelector(\".js-build-arguments-input\") as HTMLInputElement\n    private readonly runArgumentsInput = document.querySelector(\".js-run-arguments-input\") as HTMLInputElement\n\n    private onChange: (type: RunConfigurationType) => void = () => {\n    }\n    private onSelect: (type: RunConfigurationType) => void = () => {\n    }\n\n    constructor(queryParams: QueryParams) {\n        this.queryParams = queryParams\n\n        this.mount()\n    }\n\n    get configuration(): RunConfigurationType {\n        return this.currentConfiguration\n    }\n\n    public registerOnChange(callback: (type: RunConfigurationType) => void): void {\n        this.onChange = callback\n    }\n\n    public registerOnSelect(callback: (type: RunConfigurationType) => void): void {\n        this.onSelect = callback\n    }\n\n    public toggleConfigurationsList() {\n        this.configurationsList.classList.toggle(\"hidden\")\n        this.configurationsOverlay.classList.toggle(\"opened\")\n\n        this.closeSettingsPopup()\n    }\n\n    public closeConfigurationsList() {\n        this.configurationsList.classList.add(\"hidden\")\n        this.configurationsOverlay.classList.remove(\"opened\")\n    }\n\n    public toggleSettingsPopup() {\n        this.settingsPopup.classList.toggle(\"hidden\")\n        this.settingsOverlay.classList.toggle(\"opened\")\n\n        this.closeConfigurationsList()\n    }\n\n    public closeSettingsPopup() {\n        this.settingsPopup.classList.add(\"hidden\")\n        this.settingsOverlay.classList.remove(\"opened\")\n    }\n\n    public setupConfiguration() {\n        const configurationFromQuery = this.queryParams.getURLParameter(RunConfigurationManager.QUERY_PARAM_NAME)\n        if (configurationFromQuery !== null && configurationFromQuery !== undefined) {\n            this.fromQueryParam = true\n            this.useConfiguration(getRunConfigurationTypeByString(configurationFromQuery))\n            return\n        }\n\n        const buildArgumentsFromLocalStorage = window.localStorage.getItem(RunConfigurationManager.LOCAL_STORAGE_BUILD_ARGUMENTS_KEY)\n        if (buildArgumentsFromLocalStorage !== null && buildArgumentsFromLocalStorage !== undefined) {\n            this.buildArgumentsInput.value = buildArgumentsFromLocalStorage\n        }\n\n        const runArgumentsFromLocalStorage = window.localStorage.getItem(RunConfigurationManager.LOCAL_STORAGE_RUN_ARGUMENTS_KEY)\n        if (runArgumentsFromLocalStorage !== null && runArgumentsFromLocalStorage !== undefined) {\n            this.runArgumentsInput.value = runArgumentsFromLocalStorage\n        }\n\n        const configurationFromLocalStorage = window.localStorage.getItem(RunConfigurationManager.LOCAL_STORAGE_KEY)\n        if (configurationFromLocalStorage !== null && configurationFromLocalStorage !== undefined) {\n            this.useConfiguration(getRunConfigurationTypeByString(configurationFromLocalStorage))\n            return\n        }\n\n        this.useConfiguration(RunConfigurationType.Run)\n    }\n\n    public useConfiguration(runConfigurationType: RunConfigurationType) {\n        this.currentConfiguration = runConfigurationType\n        this.onChange(runConfigurationType)\n\n        const runConfigurationAsString = RunConfigurationType[runConfigurationType]\n        this.runButton.setAttribute(\"data-type\", runConfigurationAsString)\n        this.runButtonLabel.textContent = runConfigurationAsString + \" main.sp\"\n\n        if (runConfigurationType == RunConfigurationType.Cgen) {\n            this.runButtonLabel.textContent = \"Show generated C code\"\n        }\n\n        if (!this.fromQueryParam) {\n            // Don't update saved theme state if we're loading from query param.\n            window.localStorage.setItem(RunConfigurationManager.LOCAL_STORAGE_KEY, runConfigurationAsString)\n            window.localStorage.setItem(RunConfigurationManager.LOCAL_STORAGE_BUILD_ARGUMENTS_KEY, this.buildArgumentsInput.value)\n            window.localStorage.setItem(RunConfigurationManager.LOCAL_STORAGE_RUN_ARGUMENTS_KEY, this.runArgumentsInput.value)\n        }\n\n        if (this.fromQueryParam) {\n            // We update the query param only if we loaded from it.\n            // If we don't change, then the user can change the configuration and then reload the page.\n            // In this case, the page will load with the configuration from the URL, and the user\n            // will think that his configuration change has not been saved (and will not be saved\n            // until he removes the configuration from the URL).\n            // To avoid this, we update the URL if the user changes configuration.\n            this.queryParams.updateURLParameter(RunConfigurationManager.QUERY_PARAM_NAME, runConfigurationAsString)\n        }\n    }\n\n    get buildArguments(): string[] {\n        return this.buildArgumentsInput.value.split(\" \").filter(arg => arg.length > 0)\n    }\n\n    get runArguments(): string[] {\n        return this.runArgumentsInput.value.split(\" \").filter(arg => arg.length > 0)\n    }\n\n    public setBuildArguments(args: string) {\n        this.buildArgumentsInput.value = args\n    }\n\n    public setRunArguments(args: string) {\n        this.runArgumentsInput.value = args\n    }\n\n    private mount() {\n        this.openRunButton.addEventListener(\"click\", () => {\n            this.toggleConfigurationsList()\n        })\n\n        this.openSettingsPopup.addEventListener(\"click\", () => {\n            this.toggleSettingsPopup()\n        })\n\n        this.buildArgumentsInput.addEventListener(\"input\", () => {\n            window.localStorage.setItem(RunConfigurationManager.LOCAL_STORAGE_BUILD_ARGUMENTS_KEY, this.buildArgumentsInput.value)\n        })\n\n        this.runArgumentsInput.addEventListener(\"input\", () => {\n            window.localStorage.setItem(RunConfigurationManager.LOCAL_STORAGE_RUN_ARGUMENTS_KEY, this.runArgumentsInput.value)\n        })\n\n        this.configurationsOverlay.addEventListener(\"click\", () => {\n            this.toggleConfigurationsList()\n        })\n\n        this.settingsOverlay.addEventListener(\"click\", () => {\n            this.toggleSettingsPopup()\n        })\n\n        document.addEventListener(\"keydown\", (event) => {\n            if (event.key === \"Escape\") {\n                this.closeConfigurationsList()\n                this.closeSettingsPopup()\n            }\n        })\n\n        this.configurations.forEach(configuration => {\n            configuration.addEventListener(\"click\", () => {\n                const configurationTypeString = configuration.getAttribute(\"data-type\") ?? \"Run\"\n                const configurationType = getRunConfigurationTypeByString(configurationTypeString)\n                this.useConfiguration(configurationType)\n                this.onSelect(configurationType)\n            })\n        })\n    }\n}\n", "import { LocalCodeRepository } from \"../Repositories\";\nimport { RunConfigurationType } from \"../RunConfigurationManager/RunConfigurationManager\";\n\nexport interface IExample {\n    name: string\n    code: string\n    runConfiguration: RunConfigurationType\n}\n\nexport const examples: IExample[] = [\n    {\n        name: \"Hello, Playground!\",\n        code: LocalCodeRepository.WELCOME_CODE,\n        runConfiguration: RunConfigurationType.Run\n    },\n    {\n        name: \"String interpolation\",\n        // language=V\n        code: `\n// In V you can define array of string with the following syntax:\nareas := ['game', 'web', 'tools', 'science', 'systems', 'embedded', 'drivers', 'GUI', 'mobile']\n\nfor area in areas {\n    // V uses the \\${} notation to interpolate a variable\n    // or expression right on the string.\n    // Learn more about string interpolation in the documentation:\n    // https://docs.spawnlang.dev/concepts/types/strings.html#string-interpolation\n    println('Hello, \\${area} developers!')\n}\n        `,\n        runConfiguration: RunConfigurationType.Run\n    },\n    {\n        name: \"Fibonacci\",\n        // language=v\n        code: `\n// As in other languages, you can define functions in V.\n// Learn more about functions in the documentation:\n// https://docs.spawnlang.dev/concepts/functions/overview.html\nfn fib(n int) u64 {\n    // To define a array of specific type, use the following syntax.\n    // Here we define an array of int with the length of n + 2.\n    // Learn more about arrays in the documentation:\n    // https://docs.spawnlang.dev/concepts/types/arrays.html\n    mut f := []u64{len: n + 2}\n    f[0] = 0\n    f[1] = 1\n\n    for i := 2; i <= n; i++ {\n        f[i] = f[i - 1] + f[i - 2]\n    }\n\n    return f[n]\n}\n\n// main function is the entry point of the program.\n// See note about the main function in the documentation:\n// https://docs.spawnlang.dev/getting-started/hello-world.html\nfn main() {\n    for i in 0 .. 30 {\n        println(fib(i))\n    }\n}\n`,\n        runConfiguration: RunConfigurationType.Run\n    },\n    {\n        name: \"Structs and embedded structs\",\n        // language=V format=false\n        code: `\n// Structs are a way to define a new type with a set of fields.\n// You can define a struct with the following syntax:\n// Learn more about structs in the documentation:\n// https://docs.spawnlang.dev/concepts/structs/overview.html\nstruct Size {\n// mut keyword is used to define mutable fields\n// pub keyword is used to define public fields\n//\n// By default, all fields are private and immutable.\npub mut:\n    width  int\n    height int\n}\n\n// Structs can have methods.\nfn (s &Size) area() int {\n    return s.width * s.height\n}\n\n// Structs can be embedded in other structs.\nstruct Button {\n    Size\n    title string\n}\n\nmut button := Button{\n    title: 'Click me'\n    height: 2\n}\n\nbutton.width = 3\n\n// With embedding, the struct Button will automatically have get all the\n// fields and methods from the struct Size, which allows you to do:\nassert button.area() == 6\n// If you need to access embedded structs directly, use an explicit\n// reference like \\`button.Size\\`:\nassert button.Size.area() == 6\n// Conceptually, embedded structs are similar to mixins in OOP, not base classes.\n\nprint(button)\n`,\n        runConfiguration: RunConfigurationType.Run\n    },\n    {\n        name: \"Sum types\",\n        // language=V\n        code: `\nstruct Empty {}\n\nstruct Node {\n    value f64\n    left  Tree\n    right Tree\n}\n\n// Sum types are a way to define a type that can be one of several types.\n// In V, sum types are defined with following syntax.\n// Learn more about sum types in the documentation:\n// https://docs.spawnlang.dev/concepts/sum-types.html\ntype Tree = Empty | Node\n\n// Let's calculate the sum of all values in the tree.\nfn main() {\n    // Here we just define a tree with some values.\n    left := Node{0.2, Empty{}, Empty{}}\n    right := Node{0.3, Empty{}, Node{0.4, Empty{}, Empty{}}}\n    tree := Node{0.5, left, right}\n\n    // And call the sum function.\n    // Since the sum function accepts a Tree, we can pass it any of the\n    // possible types of the Tree sum type.\n    // In this case, we pass it a Node.\n    println(sum(tree)) // 0.2 + 0.3 + 0.4 + 0.5 = 1.4\n}\n\n// sum up all node values\nfn sum(tree Tree) f64 {\n    // In V, you can use \\`match\\` expression to match a value against a sum type.\n    // Learn more about match expression in the documentation:\n    // https://docs.spawnlang.dev/concepts/control-flow/conditions.html#match-expression\n    return match tree {\n        // if the value has type Empty, return 0\n        Empty { 0 }\n        // if the value has type Node, return the sum of the node value and the sum of the left and right subtrees\n        Node { tree.value + sum(tree.left) + sum(tree.right) }\n    }\n}\n`,\n        runConfiguration: RunConfigurationType.Run\n    },\n    {\n        name: \"Generics\",\n        // language=V\n        code: `\n// Sometimes there may be situations where you need code that will\n// work in the same way for different types.\n//\n// For example, in this example, we are creating a \\`List\\` that will\n// be able to store elements of any type while maintaining type safety.\n//\n// In V, to define a generic structure, you need to write the generic parameters\n// in square brackets after name.\n// There may be one or more of them, each of them must be named with a\n// single capital letter.\n//\n// Learn more about generics in the documentation:\n// https://docs.spawnlang.dev/concepts/generics.html\nstruct List[T] {\nmut:\n    data []T\n}\n\n// Since the \\`List\\` structure is generic, we can define methods that accept or\n// return the type with which the structure was created.\n//\n// That is, for each \\`List\\` with a specific type, its own copy of this structure\n// will be created when V compile code.\n//\n// This means that if you call push on a \\`List[int]\\`, then the \\`push()\\` function will\n// take an int argument.\nfn (mut l List[T]) push(val T) {\n    l.data << val\n}\n\n// Here everything is the same as with \\`push()\\`, however, for \\`List[int]\\` the function\n// will return an int value, and not accept it.\nfn (l &List[T]) pop() T {\n    return l.data.last()\n}\n\n// In V, there can be not only structures, but also functions, so the following function\n// creates a generic structure with the type passed to the function.\nfn list_of[T]() List[T] {\n    return List[T]{}\n}\n\nfn main() {\n    // Let's create a new \\`List\\` that will contain the strings:\n    mut string_list := List[string]{}\n    //                     ^^^^^^^^ Generic arguments to create a struct\n    // Here we have passed a string as the T parameter to the struct.\n    // We can say that this code is equivalent to \\`List_string{}\\`, where\n    // \\`List_string\\` has a data field with type \\`[]string\\`.\n\n    // Methods are called as usual, the compiler will understand\n    // that \\`push()\\` takes a value of type string.\n    string_list.push('hello')\n    string_list.push('world')\n\n    // When you call \\`pop()\\`, the compiler will understand that the method returns a string.\n    last_string := string_list.pop()\n    println(last_string)\n\n    // Now let's create a new \\`List\\` but which stores bool.\n    // We use our \\`list_of()\\` function for this.\n    mut bool_list := list_of[bool]()\n    //                      ^^^^^^ Generic arguments to call the function.\n    // Here, as for \\`List\\`, we passed arguments to be used instead of T.\n    // The compiler itself will compute and understand that it is necessary\n    // to create a \\`List\\` with the bool type.\n\n    bool_list.push(true)\n    println(bool_list)\n}\n        `,\n        runConfiguration: RunConfigurationType.Run\n    },\n    {\n        name: \"Concurrency\",\n        // language=V\n        code: `\n// V's model of concurrency is going to be very similar to Go's.\n// Learn more about concurrency in the documentation:\n// https://docs.spawnlang.dev/concepts/concurrency.html\nimport time\n\nfn task(id int, duration int) {\n    println('task \\${id} begin')\n    time.sleep(duration * time.millisecond)\n    println('task \\${id} end')\n}\n\nfn main() {\n    // []thread is a special type that represents an array of threads\n    mut threads := []thread{}\n\n    // \\`spawn\\` starts a new thread and returns a \\`thread\\` object\n    // that can be added in thread array.\n    threads << spawn task(1, 500)\n    threads << spawn task(2, 900)\n    threads << spawn task(3, 100)\n\n    // \\`wait\\` is special function that waits for all threads to finish.\n    threads.wait()\n\n    println('done')\n}\n        `,\n        runConfiguration: RunConfigurationType.Run\n    },\n    {\n        name: \"Channel Select\",\n        // language=V\n        code: `\n// Channels in V very similar to Go's channels.\n// Learn more about channels in the documentation:\n// https://docs.spawnlang.dev/concepts/concurrency.html#channels\nimport time\n\nfn main() {\n    // Channels is a special type that represents a communication channel between threads.\n    ch := chan f64{}\n    //         ^^^ type of data that can be sent or received through the channel\n    ch2 := chan f64{}\n    ch3 := chan f64{}\n    mut b := 0.0\n    c := 1.0\n\n    // Setup spawn threads that will send on ch/ch2.\n    spawn fn (the_channel chan f64) {\n        time.sleep(5 * time.millisecond)\n        // You can push value to channel...\n        the_channel <- 1.0\n    }(ch)\n\n    spawn fn (the_channel chan f64) {\n        time.sleep(1 * time.millisecond)\n        // ...in different threads.\n        the_channel <- 1.0\n    }(ch2)\n\n    spawn fn (the_channel chan f64) {\n        // And read values from channel in other threads\n        // If channel is empty, the thread will wait until a value is pushed to it.\n        _ := <-the_channel\n    }(ch3)\n\n    // Select is powerful construct that allows you to work for multiple channels.\n    // Learn more about select in the documentation:\n    // https://docs.spawnlang.dev/concepts/concurrency.html#channel-select\n    select {\n        a := <-ch {\n            // do something with \\`a\\`\n            eprintln('> a: \\${a}')\n        }\n        b = <-ch2 {\n            // do something with predeclared variable \\`b\\`\n            eprintln('> b: \\${b}')\n        }\n        ch3 <- c {\n            // do something if \\`c\\` was sent\n            time.sleep(5 * time.millisecond)\n            eprintln('> c: \\${c} was sent on channel ch3')\n        }\n        500 * time.millisecond {\n            // do something if no channel has become ready within 0.5s\n            eprintln('> more than 0.5s passed without a channel being ready')\n        }\n    }\n    eprintln('> done')\n}\n        `,\n        runConfiguration: RunConfigurationType.Run\n    },\n    {\n        name: \"JSON Encoding/Decoding\",\n        // language=v\n        code: `\n// V very modular and has a lot of built-in modules.\n// In this example we will use the json module to encode and decode JSON data.\n// If you want to learn more about modules, visit\n// https://docs.spawnlang.dev/concepts/modules/overview.html\nimport json\n\n// Since V is statically typed, we need to define a struct to hold the data.\n// Learn more about structs in the documentation:\n// https://docs.spawnlang.dev/concepts/structs/overview.html\nstruct User {\n    name string\n    age  int\nmut:\n    // We can use the \\`mut\\` keyword to make the field mutable.\n    // Without it, there is no way to change the field value.\n    is_registered bool\n}\n\nfn main() {\n    json_data := '[{\"name\":\"Frodo\", \"age\":25}, {\"name\":\"Bobby\", \"age\":10}]'\n\n    // json.decode() is special function that can decode JSON data.\n    // It takes a type and a json data as arguments and returns a value of passed type.\n    // V tries to decode the data as the passed type. For example, if you pass []User,\n    // it will try to decode the data as an array of User.\n    //\n    // In this case it will return an array of User.\n    //\n    // Learn more about the json module in the documentation:\n    // https://docs.spawnlang.dev/concepts/working-with-json.html\n    mut users := json.decode([]User, json_data) or {\n        // But if the json data is invalid, it will return an error.\n        // You can handle it with the 'or {}' syntax as in this example.\n        //\n        // err is a special variable that contains the error message.\n        //\n        // Learn more about error handling in documentation:\n        // https://docs.spawnlang.dev/concepts/error-handling.html\n        eprintln('Failed to parse json, error: \\${err}')\n        return\n    }\n\n    for user in users {\n        // See 'String interpolation' example to learn more about the \\${} notation.\n        println('\\${user.name}: \\${user.age}')\n    }\n    println('')\n\n    for i, mut user in users {\n        println('\\${i}) \\${user.name}')\n        if !user.can_register() {\n            println('Cannot register \\${user.name}, they are too young')\n            continue\n        }\n\n        // \\`user\\` is declared as \\`mut\\` in the for loop,\n        // modifying it will modify the array\n        user.register()\n    }\n\n    println('')\n\n    // json.encode() is a special function that can encode a value to JSON.\n    // It takes a value and returns a JSON string.\n    //\n    // It always return a string, so you don't need to handle the error.\n    encoded_data := json.encode(users)\n    println(encoded_data)\n}\n\nfn (u User) can_register() bool {\n    return u.age >= 16\n}\n\nfn (mut u User) register() {\n    u.is_registered = true\n}\n\n// Output:\n// Frodo: 25\n// Bobby: 10\n//\n// 0) Frodo\n// 1) Bobby\n// Cannot register Bobby, they are too young\n//\n// [{\"name\":\"Frodo\",\"age\":25,\"is_registered\":true},{\"name\":\"Bobby\",\"age\":10,\"is_registered\":false}]\n`,\n        runConfiguration: RunConfigurationType.Run\n    },\n    {\n        name: \"Filter Log file\",\n        // language=v\n        code: `\n// Print file lines that start with \"DEBUG:\"\nimport os\n\n// \\`write_file\\` returns a result (\\`!\\`), it must be checked\nos.write_file('app.log', '\nERROR: log file not found\nDEBUG: create new file\nDEBUG: write text to log file\nERROR: file not writeable\n') or {\n    // \\`err\\` is a special variable that contains the error\n    // in \\`or {}\\` blocks\n    eprintln('failed to write the file: \\${err}')\n    return\n}\n\n// \\`read_file\\` returns a result (\\`!string\\`), it must be checked\ntext := os.read_file('app.log') or {\n    eprintln('failed to read the file: \\${err}')\n    return\n}\n\nlines := text.split_into_lines()\nfor line in lines {\n    if line.starts_with('DEBUG:') {\n        println(line)\n    }\n}\n\n// Output:\n// DEBUG: create new file\n// DEBUG: write text to log file\n`,\n        runConfiguration: RunConfigurationType.Run\n    },\n    {\n        name: \"Compile-time Reflection\",\n        code: `\n// https://docs.spawnlang.dev/concepts/compile-time/reflection.html\n\nstruct User {\n    name string\n    age  int\n}\n\nfn main() {\n    data := 'name=Alice\\\\nage=18'\n    user := decode[User](data)\n    println(user)\n}\n\nfn decode[T](data string) T {\n    mut result := T{}\n    // compile-time \\`for\\` loop\n    // T.fields gives an array of a field metadata type\n    $for field in T.fields {\n        $if field.typ is string {\n            // $(string_expr) produces an identifier\n            result.$(field.name) = get_string(data, field.name)\n        } $else $if field.typ is int {\n            result.$(field.name) = get_int(data, field.name)\n        }\n    }\n    return result\n}\n\nfn get_string(data string, field_name string) string {\n    for line in data.split_into_lines() {\n        key_val := line.split('=')\n        if key_val[0] == field_name {\n            return key_val[1]\n        }\n    }\n    return ''\n}\n\nfn get_int(data string, field string) int {\n    return get_string(data, field).int()\n}\n\n// \\`decode[User]\\` generates:\n// fn decode_User(data string) User {\n//     mut result := User{}\n//     result.name = get_string(data, 'name')\n//     result.age = get_int(data, 'age')\n//     return result\n// }\n`,\n        runConfiguration: RunConfigurationType.Run\n    },\n    {\n        name: \"Anonymous & higher order functions\",\n        // language=V\n        code: `\n// https://docs.spawnlang.dev/concepts/functions/anonymous-and-higher-order-functions.html\n\nfn sqr(n int) int {\n    return n * n\n}\n\nfn cube(n int) int {\n    return n * n * n\n}\n\nfn run(value int, op fn (int) int) int {\n    return op(value)\n}\n\nfn main() {\n    // Anonymous functions can be called immediately:\n    fn () {\n        println('Anonymous function')\n    }()\n\n    // Functions can be passed to other functions\n    println(run(5, sqr)) // \"25\"\n\n    // Anonymous functions can be declared inside other functions:\n    double_fn := fn (n int) int {\n        return n + n\n    }\n    println(run(5, double_fn)) // \"10\"\n\n    // Functions can be passed around without assigning them to variables:\n    res := run(5, fn (n int) int {\n        return n + n\n    })\n    println(res) // \"10\"\n\n    // You can even have an array/map of functions:\n    fns := [sqr, cube]\n    println(fns[0](10)) // \"100\"\n\n    fns_map := {\n        'sqr':  sqr\n        'cube': cube\n    }\n    println(fns_map['cube'](2)) // \"8\"\n}\n`,\n        runConfiguration: RunConfigurationType.Run\n    },\n    {\n        name: \"Testing\",\n        // language=V\n        code: `\n// Tests in V is very simple.\n// To define a test function, just add \\`test_\\` prefix to the function name.\n// Learn more about testing in the documentation:\n// https://docs.spawnlang.dev/concepts/testing.html\nfn test_hello() {\n    // Inside test functions you can use \\`assert\\` to check if the result is correct.\n    assert hello() == 'Hello world'\n\n    // If the assertion fails, the test will fail.\n    // You can provide optional message to \\`assert\\`:\n    assert sum(2, 2) == 4, '2 + 2 should be 4'\n}\n\n// Other functions can be used in tests too.\nfn hello() string {\n    return 'Hello world'\n}\n\nfn sum(a int, b int) int {\n\t// oops, this should be \\`a + b\\`\n\treturn a - b\n}\n`,\n        runConfiguration: RunConfigurationType.Test\n    }\n].map((example: IExample) => {\n    example.code = example.code\n        .trim()\n        .replace(/^ {4}/gm, \"\\t\") + \"\\n\";\n\n    return example\n})\n\n// language=V\nexport const codeIfSharedLinkBroken = `\n// Oops, the shared link is broken.\n// Please recheck the link and try again.\nprintln('Hello, link 404!')\n`.trimStart()\n", "import {examples, IExample} from \"./examples\"\n\nexport class ExamplesManager {\n    private readonly selectElement: HTMLElement\n    private onSelectHandler: ((example: IExample) => void) | null = null\n\n    constructor() {\n        this.selectElement = document.querySelector(\".js-examples__select\") as HTMLElement\n    }\n\n    public registerOnSelectHandler(handler: (example: IExample) => void) {\n        this.onSelectHandler = handler\n    }\n\n    public mount() {\n        if (this.selectElement === null || this.selectElement === undefined) {\n            return\n        }\n\n        const examplesSelectList = document.querySelector(\".dropdown__list\")!\n        const examplesButton = this.selectElement.querySelector(\".dropdown__button\")\n\n        if (examplesSelectList !== null && examplesButton !== null) {\n            examples.forEach((example: IExample, index: number) => {\n                examplesSelectList.innerHTML += ExamplesManager.exampleElementListTemplate(example.name, index)\n            })\n\n            const examplesButtonSpan = examplesButton.querySelector(\"span\")!\n            examplesButtonSpan.innerText = examples[0].name\n        }\n\n        const dropdownItems = examplesSelectList.querySelectorAll<HTMLElement>(\".dropdown__list-item\")\n        dropdownItems.forEach((option: HTMLElement) => {\n            option.addEventListener(\"click\", () => {\n                const exampleName = option.innerText\n                const example = examples.find((example) => {\n                    return example.name === exampleName\n                })\n\n                if (this.onSelectHandler !== null && example) {\n                    this.onSelectHandler(example)\n                }\n            })\n        })\n\n        const dropdownBtn = this.selectElement.querySelector<HTMLElement>(\".dropdown__button\")!\n        const dropdownInput = this.selectElement.querySelector<HTMLInputElement>(\".dropdown__input_hidden\")!\n        const dropdownList = document.querySelector<HTMLElement>(\".dropdown__list\")!\n\n        dropdownBtn.addEventListener(\"click\", function () {\n            dropdownList.classList.toggle(\"dropdown__list_visible\")\n            this.classList.toggle(\"dropdown__button_active\")\n        })\n\n        dropdownItems.forEach(function (option: HTMLElement) {\n            option.addEventListener(\"click\", function (e) {\n                dropdownItems.forEach(function (el) {\n                    el.classList.remove(\"dropdown__list-item_active\")\n                })\n                const target = e.target as HTMLElement\n                target.classList.add(\"dropdown__list-item_active\")\n\n                const dropdownBtnSpan = dropdownBtn.querySelector(\"span\")!\n                dropdownBtnSpan.innerText = this.innerText\n                dropdownInput.value = this.dataset.value ?? \"\"\n                dropdownList.classList.remove(\"dropdown__list_visible\")\n            })\n        })\n\n        document.addEventListener(\"click\", function (e) {\n            if (e.target !== dropdownBtn && !dropdownBtn.contains(e.target as Node)) {\n                dropdownBtn.classList.remove(\"dropdown__button_active\")\n                dropdownList.classList.remove(\"dropdown__list_visible\")\n            }\n        })\n\n        document.addEventListener(\"keydown\", function (e) {\n            if (e.key === \"Tab\" || e.key === \"Escape\") {\n                dropdownBtn.classList.remove(\"dropdown__button_active\")\n                dropdownList.classList.remove(\"dropdown__list_visible\")\n            }\n        })\n    }\n\n    static exampleElementListTemplate = function (name: string, index: number) {\n        let className = \"\"\n        if (index === 0) {\n            className = \"dropdown__list-item_active\"\n        }\n        return `\n<li class=\"dropdown__list-item ${className}\" data-value=\"${name}\">${name}</li>\n`\n    }\n}\n", "function fallbackCopyTextToClipboard(text: string): void {\n    const textArea = document.createElement(\"textarea\")\n    textArea.value = text\n\n    // Avoid scrolling to the bottom\n    textArea.style.top = \"0\"\n    textArea.style.left = \"0\"\n    textArea.style.position = \"fixed\"\n\n    document.body.appendChild(textArea)\n    textArea.focus()\n    textArea.select()\n\n    try {\n        // noinspection JSDeprecatedSymbols\n        const successful = document.execCommand(\"copy\")\n        const msg = successful ? \"successful\" : \"unsuccessful\"\n        console.log(\"Fallback: Copying text command was \" + msg)\n    } catch (err) {\n        console.log(\"Fallback: Oops, unable to copy\", err)\n    }\n\n    document.body.removeChild(textArea)\n}\n\nexport function copyTextToClipboard(text: string, onCopy: () => void) {\n    if (!navigator.clipboard) {\n        fallbackCopyTextToClipboard(text)\n        return Promise.resolve()\n    }\n    return navigator.clipboard.writeText(text)\n        .then(() => {\n            console.log(\"Async: Copying to clipboard was successful!\")\n            onCopy()\n        }, err => {\n            fallbackCopyTextToClipboard(text)\n            console.log(\"Async: Could not copy text: \", err, \"fallback to old method\")\n        })\n}\n", "import {SharedCodeRunConfiguration} from \"../Repositories\";\n\ntype RunCodeResponse = {\n    output: string\n    buildOutput: string\n    error: string\n}\n\ntype RetrieveCgenCodeResponse = {\n    cgenCode: string\n    exitCode: number\n    buildOutput: string\n    error: string\n}\n\ntype FormatCodeResponse = {\n    output: string\n    error: string\n}\n\nexport type ShareCodeResponse = {\n    hash: string\n    error: string\n}\n\ntype CreateBugResponse = {\n    link: string\n    error: string\n}\n\ntype VersionResponse = {\n    version: string\n    error: string\n}\n\nexport class RunnableCodeSnippet {\n    constructor(\n        public code: string,\n        public buildArguments: string[],\n        public runArguments: string[],\n        public runConfiguration: SharedCodeRunConfiguration,\n    ) {\n    }\n\n    public toFormData(): FormData {\n        const data = new FormData()\n        data.append(\"code\", this.code)\n        data.append(\"build-arguments\", this.buildArguments.join(\" \"))\n        data.append(\"run-arguments\", this.runArguments.join(\" \"))\n        data.append(\"run-configuration\", this.runConfiguration.toString())\n        return data\n    }\n}\n\n/**\n * CodeRunner describes how to run, format, and share code.\n */\nexport class CodeRunner {\n    public static async runCode(snippet: RunnableCodeSnippet): Promise<RunCodeResponse> {\n        let resp1 = await fetch(\"/run\", {\n            method: \"post\",\n            body: snippet.toFormData(),\n        });\n        if (resp1.status != 200) {\n            throw new Error(CodeRunner.buildErrorMessage(\"run\", resp1))\n        }\n        return await resp1.json() as RunCodeResponse;\n    }\n\n    public static async runTest(snippet: RunnableCodeSnippet): Promise<RunCodeResponse> {\n        const resp = await fetch(\"/run_test\", {\n            method: \"post\",\n            body: snippet.toFormData(),\n        });\n        if (resp.status != 200) {\n            throw new Error(CodeRunner.buildErrorMessage(\"test\", resp));\n        }\n        return await resp.json() as RunCodeResponse;\n    }\n\n    public static async retrieveCgenCode(snippet: RunnableCodeSnippet): Promise<RetrieveCgenCodeResponse> {\n        let resp1 = await fetch(\"/cgen\", {\n            method: \"post\",\n            body: snippet.toFormData(),\n        });\n        if (resp1.status != 200) {\n            throw new Error(CodeRunner.buildErrorMessage(\"cgen\", resp1))\n        }\n        return await resp1.json() as RetrieveCgenCodeResponse;\n    }\n\n    public static async formatCode(snippet: RunnableCodeSnippet): Promise<FormatCodeResponse> {\n        let resp = await fetch(\"/format\", {\n            method: \"post\",\n            body: snippet.toFormData(),\n        });\n        return await resp.json() as FormatCodeResponse;\n    }\n\n    public static async shareCode(snippet: RunnableCodeSnippet): Promise<ShareCodeResponse> {\n        let resp1 = await fetch(\"/share\", {\n            method: \"post\",\n            body: snippet.toFormData(),\n        });\n        if (resp1.status != 200) {\n            throw new Error(CodeRunner.buildErrorMessage(\"share\", resp1))\n        }\n        return await resp1.json() as ShareCodeResponse;\n    }\n\n    public static async createBugUrl(snippet: RunnableCodeSnippet): Promise<CreateBugResponse> {\n        let resp1 = await fetch(\"/create_bug_url\", {\n            method: \"post\",\n            body: snippet.toFormData(),\n        });\n        if (resp1.status != 200) {\n            throw new Error(CodeRunner.buildErrorMessage(\"create_bug_url\", resp1))\n        }\n        return await resp1.json() as CreateBugResponse;\n    }\n\n    public static async getSpawnVersion(): Promise<VersionResponse> {\n        let resp1 = await fetch(\"/version\", {\n            method: \"post\",\n        });\n        if (resp1.status != 200) {\n            throw new Error(CodeRunner.buildErrorMessage(\"version\", resp1))\n        }\n        return await resp1.json() as VersionResponse;\n    }\n\n    private static buildErrorMessage(kind: string, response: Response): string {\n        const base = `Failed to invoke \\`/${kind}\\` endpoint`\n        const responseStatus = response.status.toString() + \" \" + response.statusText\n        return `${base}: ${responseStatus}`\n    }\n}\n", "import {CodeRepository, LocalCodeRepository, SharedCodeRepository} from \"../Repositories\"\nimport {ITheme} from \"../themes\"\nimport {Terminal} from \"../Terminal/Terminal\"\nimport {RunnableCodeSnippet} from \"../CodeRunner/CodeRunner\";\nimport {\n    RunConfigurationManager,\n    toSharedRunConfiguration\n} from \"../RunConfigurationManager/RunConfigurationManager\";\n\nexport class Editor {\n    private static readonly FONT_LOCAL_STORAGE_KEY = \"editor-font-size\"\n\n    private readonly textAreaElement: HTMLTextAreaElement\n    private repository: CodeRepository\n    public editor: CodeMirror.Editor\n\n    constructor(id: string, wrapper: HTMLElement, repository: CodeRepository, public terminal: Terminal, readOnly: boolean, mode: string) {\n        const editorConfig: CodeMirror.EditorConfiguration = {\n            mode: mode,\n            lineNumbers: true,\n            // @ts-ignore\n            matchBrackets: true,\n            extraKeys: {\n                \"Ctrl-Space\": \"autocomplete\",\n                \"Ctrl-/\": \"toggleComment\",\n            },\n            readOnly: readOnly,\n            indentWithTabs: false,\n            indentUnit: 4,\n            autoCloseBrackets: true,\n            showHint: true,\n            lint: {\n                async: true,\n                lintOnChange: true,\n                delay: 20,\n            },\n            toggleLineComment: {\n                indent: true,\n                padding: \" \",\n            },\n            theme: \"dark\",\n        }\n\n        this.textAreaElement = wrapper.querySelector(`textarea.${id}`)! as HTMLTextAreaElement\n        // @ts-ignore\n        this.editor = CodeMirror.fromTextArea(this.textAreaElement, editorConfig)\n        this.repository = repository\n\n        this.initFont()\n    }\n\n    private initFont() {\n        const fontSize = window.localStorage.getItem(Editor.FONT_LOCAL_STORAGE_KEY)\n        if (fontSize !== null) {\n            this.setEditorFontSize(fontSize)\n        }\n    }\n\n    public changeEditorFontSize(delta: number) {\n        const cm = document.getElementsByClassName(\"CodeMirror\")[0] as HTMLElement\n        const fontSize = window.getComputedStyle(cm, null).getPropertyValue(\"font-size\")\n        if (fontSize) {\n            const newFontSize = parseInt(fontSize) + delta\n            cm.style.fontSize = newFontSize + \"px\"\n            window.localStorage.setItem(Editor.FONT_LOCAL_STORAGE_KEY, newFontSize.toString())\n            this.editor.refresh()\n        }\n    }\n\n    private setEditorFontSize(size: string) {\n        const cm = document.getElementsByClassName(\"CodeMirror\")[0] as HTMLElement\n        cm.style.fontSize = size + \"px\"\n        this.refresh()\n    }\n\n    public setCode(code: string, preserveCursor: boolean = false) {\n        const cursor = this.editor.getCursor()\n        this.editor.setValue(code)\n        this.repository.saveCode(code)\n\n        if (preserveCursor) {\n            this.editor.setCursor(cursor)\n        }\n    }\n\n    public getCode() {\n        return this.editor.getValue()\n    }\n\n    public saveCode() {\n        const isSharedCodeRepository = this.repository instanceof SharedCodeRepository\n\n        if (isSharedCodeRepository) {\n            this.repository = new LocalCodeRepository()\n        }\n\n        this.repository.saveCode(this.getCode())\n    }\n\n    public getRunnableCodeSnippet(runConfiguration: RunConfigurationManager): RunnableCodeSnippet {\n        return new RunnableCodeSnippet(this.getCode(), runConfiguration.buildArguments, runConfiguration.runArguments, toSharedRunConfiguration(runConfiguration.configuration))\n    }\n\n    public clear() {\n        this.setCode(\"\")\n    }\n\n    public setTheme(theme: ITheme) {\n        this.editor.setOption(\"theme\", theme.name())\n    }\n\n    public showCompletion() {\n        this.editor.execCommand(\"autocomplete\")\n    }\n\n    public refresh() {\n        this.editor.refresh()\n    }\n\n    public hide() {\n        const realEditorElement = this.textAreaElement.parentElement as HTMLElement\n        console.log(realEditorElement)\n        if (realEditorElement !== undefined) {\n            realEditorElement.style.display = \"none\"\n        }\n\n        const editorsElement = realEditorElement.parentElement\n        editorsElement?.classList?.remove(\"two-editors\")\n    }\n\n    public show() {\n        const realEditorElement = this.textAreaElement.parentElement as HTMLElement\n        console.log(realEditorElement)\n        if (realEditorElement !== undefined) {\n            realEditorElement.style.display = \"grid\"\n        }\n\n        const editorsElement = realEditorElement.parentElement\n        editorsElement?.classList?.add(\"two-editors\")\n    }\n}\n", "import { ITheme } from \"./interface\";\n\nexport class Dark implements ITheme {\n    name(): string {\n        return \"dark\"\n    }\n}\n", "import { ITheme } from \"./interface\";\n\nexport class Light implements ITheme {\n    name(): string {\n        return \"light\"\n    }\n}\n", "import {QueryParams} from \"../QueryParams\";\nimport {ITheme, Dark, Light} from \"../themes\";\n\ntype ThemeCallback = (newTheme: ITheme) => void;\n\n/**\n * ThemeManager is responsible for managing the theme of the playground.\n * It will register a callback to the change theme button and will update the\n * theme when the user clicks on the button.\n * It will also update the theme when the user changes the theme in the URL.\n *\n * @param queryParams The query params of the URL.\n * @param changeThemeButtons The button to change the theme or null.\n *\n * @example\n * const changeThemeButtons = document.querySelector('.js-change-theme')\n * const queryParams = new QueryParams(window.location.search);\n * const themeManager = new ThemeManager(queryParams, changeThemeButtons)\n *\n * themeManager.registerOnChange((theme) => {\n *   // Do something with the theme\n * })\n */\nexport class ThemeManager {\n    private static readonly QUERY_PARAM_NAME = \"theme\"\n    private static readonly LOCAL_STORAGE_KEY = \"theme\"\n\n    private themes: ITheme[] = [new Dark(), new Light()]\n    private currentTheme: ITheme | null = null\n    private onChange: ThemeCallback[] = []\n    private readonly queryParams: QueryParams\n    private readonly changeThemeButtons: NodeListOf<Element> | null = null\n    private readonly predefinedTheme: ITheme | null = null\n    private fromQueryParam: boolean = false\n\n    constructor(queryParams: QueryParams, predefinedTheme: ITheme | null = null) {\n        this.queryParams = queryParams\n        this.predefinedTheme = predefinedTheme\n        this.changeThemeButtons = document.querySelectorAll(\".js-change-theme__action\")\n    }\n\n    public registerOnChange(callback: ThemeCallback): void {\n        this.onChange.push(callback)\n    }\n\n    public loadTheme(): void {\n        const themeFromQuery = this.queryParams.getURLParameter(ThemeManager.QUERY_PARAM_NAME)\n        if (themeFromQuery !== null && themeFromQuery !== undefined) {\n            this.fromQueryParam = true\n            const theme = this.findTheme(themeFromQuery)\n            this.turnTheme(theme)\n            return\n        }\n\n        const themeFromLocalStorage = window.localStorage.getItem(ThemeManager.LOCAL_STORAGE_KEY)\n        if (themeFromLocalStorage !== null && themeFromLocalStorage !== undefined) {\n            const theme = this.findTheme(themeFromLocalStorage)\n            this.turnTheme(theme)\n            return\n        }\n\n        if (this.predefinedTheme !== null && this.predefinedTheme !== undefined) {\n            this.turnTheme(this.predefinedTheme)\n            return\n        }\n\n        const preferDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n        const defaultTheme = preferDark ? new Dark() : new Light();\n\n        this.turnTheme(defaultTheme)\n    }\n\n    private findTheme(themeFromLocalStorage: string) {\n        let foundThemes = this.themes.filter(theme => theme.name() === themeFromLocalStorage)\n        let theme = foundThemes[0]\n        if (foundThemes.length == 0) {\n            theme = new Dark()\n        }\n        return theme\n    }\n\n    private turnTheme(theme: ITheme): void {\n        this.currentTheme = theme\n        this.onChange.forEach(callback => callback(theme))\n\n        if (this.changeThemeButtons !== null) {\n            this.changeThemeButtons.forEach((button) => {\n                const svgSun = button.querySelector(\".sun\") as HTMLElement\n                const svgMoon = button.querySelector(\".moon\") as HTMLElement\n                if (svgSun !== null && svgMoon !== null) {\n                    if (theme.name() === \"dark\") {\n                        svgSun.style.display = \"block\"\n                        svgMoon.style.display = \"none\"\n                    } else {\n                        svgSun.style.display = \"none\"\n                        svgMoon.style.display = \"block\"\n                    }\n                }\n            })\n        }\n\n        const html = document.querySelector(\"html\")!\n        html.setAttribute(\"data-theme\", theme.name())\n\n        if (!this.fromQueryParam) {\n            // Don't update saved theme state if we're loading from query param.\n            window.localStorage.setItem(ThemeManager.LOCAL_STORAGE_KEY, theme.name())\n        }\n\n        if (this.fromQueryParam) {\n            // We update the query param only if we loaded from it.\n            // If we don't change, then the user can change the theme and then reload the page.\n            // In this case, the page will load with the theme from the URL, and the user\n            // will think that his theme change has not been saved (and will not be saved\n            // until he removes the theme from the URL).\n            // To avoid this, we update the URL if the user changes theme.\n            this.queryParams.updateURLParameter(ThemeManager.QUERY_PARAM_NAME, theme.name())\n        }\n    }\n\n    public turnDarkTheme(): void {\n        this.turnTheme(new Dark())\n    }\n\n    public turnLightTheme(): void {\n        this.turnTheme(new Light())\n    }\n\n    public toggleTheme(): void {\n        if (!this.currentTheme) {\n            return\n        }\n\n        if (this.currentTheme.name() === \"light\") {\n            this.turnDarkTheme()\n        } else {\n            this.turnLightTheme()\n        }\n    }\n}\n", null, null, null, null, null, null, null, "// Modified version from https://github.com/rburns/ansi-to-html\n//\n// Copyright (c) 2012 Rob Burns\n//\n// Permission is hereby granted, free of charge, to any person\n// obtaining a copy of this software and associated documentation\n// files (the \"Software\"), to deal in the Software without\n// restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the\n// Software is furnished to do so, subject to the following\n// conditions:\n//\n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n// OTHER DEALINGS IN THE SOFTWARE.\nimport {encodeXML} from 'entities';\n\nconst defaults = {\n    fg: '--base-terminal-color',\n    bg: '#000',\n    newline: false,\n    escapeXML: false,\n    stream: false,\n    colors: getDefaultColors()\n};\n\nfunction getDefaultColors() {\n    const colors = {\n        0: '#000',\n        1: '#F55',\n        2: '#0A0',\n        3: '#ea7c10',\n        4: '#00A',\n        5: '#A0A',\n        6: '#0AA',\n        7: '#AAA',\n        8: '#555',\n        9: '#F55',\n        10: '#5F5',\n        11: '#FF5',\n        12: '#55F',\n        13: '#F5F',\n        14: '#5FF',\n        15: '#FFF'\n    };\n\n    range(0, 5).forEach(red => {\n        range(0, 5).forEach(green => {\n            range(0, 5).forEach(blue => setStyleColor(red, green, blue, colors));\n        });\n    });\n\n    range(0, 23).forEach(function (gray) {\n        const c = gray + 232;\n        const l = toHexString(gray * 10 + 8);\n\n        colors[c] = '#' + l + l + l;\n    });\n\n    return colors;\n}\n\nfunction setStyleColor(red: any, green: any, blue: any, colors: any) {\n    const c = 16 + (red * 36) + (green * 6) + blue;\n    const r = red > 0 ? red * 40 + 55 : 0;\n    const g = green > 0 ? green * 40 + 55 : 0;\n    const b = blue > 0 ? blue * 40 + 55 : 0;\n\n    colors[c] = toColorHexString([r, g, b]);\n}\n\n/**\n * Converts from a number like 15 to a hex string like 'F'\n */\nfunction toHexString(num: number): string {\n    let str = num.toString(16);\n\n    while (str.length < 2) {\n        str = '0' + str;\n    }\n\n    return str;\n}\n\n/**\n * Converts from an array of numbers like [15, 15, 15] to a hex string like 'FFF'\n */\nfunction toColorHexString(ref: number[]): string {\n    const results = [];\n\n    for (const r of ref) {\n        results.push(toHexString(r));\n    }\n\n    return '#' + results.join('');\n}\n\nfunction generateOutput(stack: any[], token: string, data: any, options: any) {\n    let result;\n\n    if (token === 'text') {\n        result = pushText(data, options);\n    } else if (token === 'display') {\n        result = handleDisplay(stack, data, options);\n    } else if (token === 'xterm256Foreground') {\n        result = pushForegroundColor(stack, options.colors[data]);\n    } else if (token === 'xterm256Background') {\n        result = pushBackgroundColor(stack, options.colors[data]);\n    } else if (token === 'rgb') {\n        result = handleRgb(stack, data);\n    }\n\n    return result;\n}\n\nfunction handleRgb(stack: any[], data: string): string {\n    data = data.substring(2).slice(0, -1);\n    const operation = +data.substr(0, 2);\n\n    const color = data.substring(5).split(';');\n    const rgb = color.map(function (value) {\n        return ('0' + Number(value).toString(16)).substr(-2);\n    }).join('');\n\n    return pushStyle(stack, (operation === 38 ? 'color:#' : 'background-color:#') + rgb);\n}\n\nfunction handleDisplay(stack: any[], codeStr: string, options: any) {\n    let code = parseInt(codeStr, 10);\n\n    const codeMap = {\n        '-1': () => '<br/>',\n        0: () => stack.length && resetStyles(stack),\n        1: () => pushTag(stack, 'b'),\n        3: () => pushTag(stack, 'i'),\n        4: () => pushTag(stack, 'u'),\n        8: () => pushStyle(stack, 'display:none'),\n        9: () => pushTag(stack, 'strike'),\n        22: () => pushStyle(stack, 'font-weight:normal;text-decoration:none;font-style:normal'),\n        23: () => closeTag(stack, 'i'),\n        24: () => closeTag(stack, 'u'),\n        39: () => pushForegroundColor(stack, options.fg),\n        49: () => pushBackgroundColor(stack, options.bg),\n        53: () => pushStyle(stack, 'text-decoration:overline')\n    };\n\n    let result;\n    if (codeMap[code]) {\n        result = codeMap[code]();\n    } else if (4 < code && code < 7) {\n        result = pushTag(stack, 'blink');\n    } else if (29 < code && code < 38) {\n        result = pushForegroundColor(stack, options.colors[code - 30]);\n    } else if ((39 < code && code < 48)) {\n        result = pushBackgroundColor(stack, options.colors[code - 40]);\n    } else if ((89 < code && code < 98)) {\n        result = pushForegroundColor(stack, options.colors[8 + (code - 90)]);\n    } else if ((99 < code && code < 108)) {\n        result = pushBackgroundColor(stack, options.colors[8 + (code - 100)]);\n    }\n\n    return result;\n}\n\n/**\n * Clear all the styles\n * @returns {string}\n */\nfunction resetStyles(stack) {\n    const stackClone = stack.slice(0);\n\n    stack.length = 0;\n\n    return stackClone.reverse().map(function (tag) {\n        return '</' + tag + '>';\n    }).join('');\n}\n\n/**\n * Creates an array of numbers ranging from low to high\n * @param {number} low\n * @param {number} high\n * @returns {Array}\n * @example range(3, 7); // creates [3, 4, 5, 6, 7]\n */\nfunction range(low: number, high: any) {\n    const results = [];\n\n    for (let j = low; j <= high; j++) {\n        results.push(j);\n    }\n\n    return results;\n}\n\n\n/**\n * Returns a new function that is true if value is NOT the same category\n * @returns {function}\n */\nfunction notCategory(category: string) {\n    return function (e) {\n        return (category === null || e.category !== category) && category !== 'all';\n    };\n}\n\n/**\n * Converts a code into an ansi token type\n */\nfunction categoryForCode(codeStr: string): string | null {\n    let code = parseInt(codeStr, 10);\n    let result = null;\n\n    if (code === 0) {\n        result = 'all';\n    } else if (code === 1) {\n        result = 'bold';\n    } else if ((2 < code && code < 5)) {\n        result = 'underline';\n    } else if ((4 < code && code < 7)) {\n        result = 'blink';\n    } else if (code === 8) {\n        result = 'hide';\n    } else if (code === 9) {\n        result = 'strike';\n    } else if ((29 < code && code < 38) || code === 39 || (89 < code && code < 98)) {\n        result = 'foreground-color';\n    } else if ((39 < code && code < 48) || code === 49 || (99 < code && code < 108)) {\n        result = 'background-color';\n    }\n\n    return result;\n}\n\nfunction pushText(text: string, options: { escapeXML: any; }): string {\n    if (options.escapeXML) {\n        return encodeXML(text);\n    }\n\n    return text;\n}\n\nfunction pushTag(stack: any[], tag: string, style: string = ''): string {\n    stack.push(tag);\n\n    return `<${tag}${style ? ` style=\"${style}\"` : ''}>`;\n}\n\nfunction pushTagWithClass(stack: any[], tag: string, classes: string = ''): string {\n    stack.push(tag);\n\n    return `<${tag}${classes ? ` class=\"${classes}\"` : ''}>`;\n}\n\n/**\n * @param {Array} stack\n * @param {string} style\n * @returns {string}\n */\nfunction pushStyle(stack: any[], style: string): string {\n    return pushTag(stack, 'span', style);\n}\n\nfunction pushForegroundColor(stack: any[], color: string): string {\n    if (color.startsWith('--')) {\n        return pushTagWithClass(stack, 'span', color.substring(2));\n    }\n\n    return pushTag(stack, 'span', 'color:' + color);\n}\n\nfunction pushBackgroundColor(stack: any[], color: string): string {\n    return pushTag(stack, 'span', 'background-color:' + color);\n}\n\nfunction closeTag(stack: any[], style: string): string {\n    let last;\n\n    if (stack.slice(-1)[0] === style) {\n        last = stack.pop();\n    }\n\n    if (last) {\n        return '</' + style + '>';\n    }\n\n    return '';\n}\n\n/**\n * @param {string} text\n * @param {object} options\n * @param {function} callback\n * @returns {Array}\n */\nfunction tokenize(text: string, options: { newline: any; }, callback: {\n    (token: any, data: any): void;\n    (arg0: string, arg1: number): void;\n}) {\n    let ansiMatch = false;\n    const ansiHandler = 3;\n\n    function remove() {\n        return '';\n    }\n\n    function removeXterm256Foreground(m: any, g1: any) {\n        callback('xterm256Foreground', g1);\n        return '';\n    }\n\n    function removeXterm256Background(m: any, g1: any) {\n        callback('xterm256Background', g1);\n        return '';\n    }\n\n    function newline(m: any) {\n        if (options.newline) {\n            callback('display', -1);\n        } else {\n            callback('text', m);\n        }\n\n        return '';\n    }\n\n    function ansiMess(m: any, g1: string) {\n        ansiMatch = true;\n        if (g1.trim().length === 0) {\n            g1 = '0';\n        }\n\n        const g2 = g1.trimRight(';').split(';');\n\n        for (const g of g2) {\n            callback('display', g);\n        }\n\n        return '';\n    }\n\n    function realText(m: any) {\n        callback('text', m);\n\n        return '';\n    }\n\n    function rgb(m: any) {\n        callback('rgb', m);\n\n        return '';\n    }\n\n    /* eslint no-control-regex:0 */\n    const tokens = [{\n        pattern: /^\\x08+/,\n        sub: remove\n    }, {\n        pattern: /^\\x1b\\[[012]?K/,\n        sub: remove\n    }, {\n        pattern: /^\\x1b\\[\\(B/,\n        sub: remove\n    }, {\n        pattern: /^\\x1b\\[[34]8;2;\\d+;\\d+;\\d+m/,\n        sub: rgb\n    }, {\n        pattern: /^\\x1b\\[38;5;(\\d+)m/,\n        sub: removeXterm256Foreground\n    }, {\n        pattern: /^\\x1b\\[48;5;(\\d+)m/,\n        sub: removeXterm256Background\n    }, {\n        pattern: /^\\n/,\n        sub: newline\n    }, {\n        pattern: /^\\r+\\n/,\n        sub: newline\n    }, {\n        pattern: /^\\r/,\n        sub: newline\n    }, {\n        pattern: /^\\x1b\\[((?:\\d{1,3};?)+|)m/,\n        sub: ansiMess\n    }, {\n        // CSI n J\n        // ED - Erase in Display Clears part of the screen.\n        // If n is 0 (or missing), clear from cursor to end of screen.\n        // If n is 1, clear from cursor to beginning of the screen.\n        // If n is 2, clear entire screen (and moves cursor to upper left on DOS ANSI.SYS).\n        // If n is 3, clear entire screen and delete all lines saved in the scrollback buffer\n        //   (this feature was added for xterm and is supported by other terminal applications).\n        pattern: /^\\x1b\\[\\d?J/,\n        sub: remove\n    }, {\n        // CSI n ; m f\n        // HVP - Horizontal Vertical Position Same as CUP\n        pattern: /^\\x1b\\[\\d{0,3};\\d{0,3}f/,\n        sub: remove\n    }, {\n        // catch-all for CSI sequences?\n        pattern: /^\\x1b\\[?[\\d;]{0,3}/,\n        sub: remove\n    }, {\n        /**\n         * extracts real text - not containing:\n         * - `\\x1b' - ESC - escape (Ascii 27)\n         * - '\\x08' - BS - backspace (Ascii 8)\n         * - `\\n` - Newline - linefeed (LF) (ascii 10)\n         * - `\\r` - Windows Carriage Return (CR)\n         */\n        pattern: /^(([^\\x1b\\x08\\r\\n])+)/,\n        sub: realText\n    }];\n\n    function process(handler: { pattern: any; sub: any; }, i: number) {\n        if (i > ansiHandler && ansiMatch) {\n            return;\n        }\n\n        ansiMatch = false;\n\n        text = text.replace(handler.pattern, handler.sub);\n    }\n\n    const results1 = [];\n    let {length} = text;\n\n    outer:\n        while (length > 0) {\n            for (let i = 0, o = 0, len = tokens.length; o < len; i = ++o) {\n                const handler = tokens[i];\n                process(handler, i);\n\n                if (text.length !== length) {\n                    // We matched a token and removed it from the text. We need to\n                    // start matching *all* tokens against the new text.\n                    length = text.length;\n                    continue outer;\n                }\n            }\n\n            if (text.length === length) {\n                break;\n            }\n            results1.push(0);\n\n            length = text.length;\n        }\n\n    return results1;\n}\n\n/**\n * If streaming, then the stack is \"sticky\"\n */\nfunction updateStickyStack(stickyStack: any[], token: string, data: any): any[] {\n    if (token !== 'text') {\n        stickyStack = stickyStack.filter(notCategory(categoryForCode(data)));\n        stickyStack.push({token, data, category: categoryForCode(data)});\n    }\n\n    return stickyStack;\n}\n\nexport class Filter {\n    options: any;\n    stack: any[];\n    stickyStack: any[];\n\n    /**\n     * @param {object} options\n     * @param {string=} options.fg The default foreground color used when reset color codes are encountered.\n     * @param {string=} options.bg The default background color used when reset color codes are encountered.\n     * @param {boolean=} options.newline Convert newline characters to `<br/>`.\n     * @param {boolean=} options.escapeXML Generate HTML/XML entities.\n     * @param {boolean=} options.stream Save style state across invocations of `toHtml()`.\n     * @param {(string[] | {[code: number]: string})=} options.colors Can override specific colors or the entire ANSI palette.\n     */\n    constructor(options: { colors?: any; }) {\n        options = options || {};\n\n        if (options.colors) {\n            options.colors = Object.assign({}, defaults.colors, options.colors);\n        }\n\n        this.options = Object.assign({}, defaults, options);\n        this.stack = [];\n        this.stickyStack = [];\n    }\n\n    toHtml(input: string | string[]): string {\n        input = typeof input === 'string' ? [input] : input;\n        const {stack, options} = this;\n        const buf = [];\n\n        this.stickyStack.forEach(element => {\n            const output = generateOutput(stack, element.token, element.data, options);\n\n            if (output) {\n                buf.push(output);\n            }\n        });\n\n        tokenize(input.join(''), options, (token, data) => {\n            const output = generateOutput(stack, token, data, options);\n\n            if (output) {\n                buf.push(output);\n            }\n\n            if (options.stream) {\n                this.stickyStack = updateStickyStack(this.stickyStack, token, data);\n            }\n        });\n\n        if (stack.length) {\n            buf.push(resetStyles(stack));\n        }\n\n        return buf.join('');\n    }\n}\n", "import {Filter} from \"../Ansi/ansi\";\n\ntype OnCloseCallback = () => void\ntype OnWriteCallback = (text: string) => void\ntype FilterCallback = (text: string) => boolean\n\nexport class Terminal {\n    private readonly element: HTMLElement\n    private onClose: OnCloseCallback | null = null\n    private onWrite: OnWriteCallback | null = null\n    private filters: FilterCallback[] = []\n    private tabsElement: HTMLElement;\n\n    constructor(element: HTMLElement) {\n        this.element = element\n        this.tabsElement = this.element.querySelector(\".js-terminal__tabs\") as HTMLElement\n        this.tabsElement.querySelector(\".js-terminal\")\n        this.attachResizeHandler(element)\n    }\n\n    public registerCloseHandler(handler: () => void) {\n        this.onClose = handler\n    }\n\n    public registerWriteHandler(handler: (text: string) => void) {\n        this.onWrite = handler\n    }\n\n    public registerFilter(filter: FilterCallback) {\n        this.filters.push(filter)\n    }\n\n    public getTabElement(name: string): HTMLElement | null {\n        return this.tabsElement.querySelector(`input[value='${name}']`) as HTMLElement\n    }\n\n    public openTab(name: string) {\n        const tabsInput = this.getTabElement(name)\n        if (tabsInput !== null) {\n            (tabsInput as HTMLInputElement).checked = true\n            tabsInput.dispatchEvent(new Event(\"change\"))\n        }\n    }\n\n    public openOutputTab() {\n        this.openTab(\"output\")\n    }\n\n    public openBuildLogTab() {\n        this.openTab(\"build-log\")\n    }\n\n    public write(text: string) {\n        this.writeImpl(text, true)\n    }\n\n    public writeOutput(text: string) {\n        this.writeImpl(text, false)\n    }\n\n    private writeImpl(text: string, buildLog: boolean) {\n        const lines = text.split(\"\\n\")\n        const outputElement = this.getTerminalOutputElement(buildLog)\n        const filteredLines = lines.filter(line => this.filters.every(filter => filter(line)))\n        const newText = filteredLines.map(this.escapeLine).map(this.highlightLine).join(\"\\n\")\n        outputElement.innerHTML += newText + \"\\n\"\n\n        if (this.onWrite !== null) {\n            this.onWrite(text)\n        }\n    }\n\n    private escapeLine(line: string): string {\n        return line.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\")\n    }\n\n    private highlightLine(line: string): string {\n        let filter = new Filter({});\n        return filter.toHtml(line)\n    }\n\n    public clear() {\n        this.getTerminalOutputElement(false).innerHTML = \"\"\n        this.getTerminalOutputElement(true).innerHTML = \"\"\n    }\n\n    public mount() {\n        const closeButton = this.element.querySelector(\".js-terminal__close-buttom\") as HTMLElement\n        if (closeButton === null || closeButton === undefined || this.onClose === null) {\n            return\n        }\n\n        closeButton.addEventListener(\"click\", this.onClose)\n\n        const tabsElement = this.element.querySelector(\".js-terminal__tabs\") as HTMLElement\n        const tabsInputs = tabsElement.querySelectorAll(\"input\")\n        tabsInputs.forEach(input => {\n            input.addEventListener(\"change\", () => {\n                const value = input.value\n                if (value === \"output\") {\n                    this.getTerminalOutputElement(false).style.display = \"block\"\n                    this.getTerminalOutputElement(true).style.display = \"none\"\n                } else {\n                    this.getTerminalOutputElement(false).style.display = \"none\"\n                    this.getTerminalOutputElement(true).style.display = \"block\"\n                }\n            })\n        })\n    }\n\n    private getTerminalOutputElement(buildLog: boolean): HTMLElement {\n        if (buildLog) {\n            return this.element.querySelector(\".js-terminal__build-log\") as HTMLElement\n        }\n        return this.element.querySelector(\".js-terminal__output\") as HTMLElement\n    }\n\n    private attachResizeHandler(element: HTMLElement) {\n        const header = element.querySelector('.header');\n        if (!header) return;\n\n        let mouseDown = false;\n        header.addEventListener('mousedown', (e) => {\n            const target = e.target as Element;\n            if (target.tagName.toLowerCase() === 'label') return;\n            mouseDown = true;\n            document.body.classList.add('dragging');\n        });\n\n        header.addEventListener('touchstart', (e) => {\n            const target = e.target as Element;\n            if (target.tagName.toLowerCase() === 'label') return;\n            mouseDown = true;\n            document.body.classList.add('dragging');\n        })\n\n        // @ts-ignore\n        header.addEventListener('touchmove', (e: TouchEvent) => {\n            if (!mouseDown) return;\n            element.style.height = `${document.body.clientHeight - e.touches[0].clientY + header.clientHeight / 2}px`;\n            e.preventDefault()\n        })\n\n        document.addEventListener('mousemove', (e: MouseEvent) => {\n            if (!mouseDown) return;\n            element.style.height = `${document.body.clientHeight - e.clientY + header.clientHeight / 2}px`;\n        });\n\n        document.addEventListener('mouseup', () => {\n            mouseDown = false;\n            document.body.classList.remove('dragging');\n        });\n\n        document.addEventListener('touchend', () => {\n            mouseDown = false;\n            document.body.classList.remove('dragging');\n        })\n    }\n}\n", "export class TipsManager {\n    private static readonly DONT_SHOW_AGAIN_LOCAL_STORAGE_KEY = \"no-more-tips\"\n    private readonly layerElement: HTMLElement\n\n    constructor() {\n        this.layerElement = document.querySelector(\".js-tips-layer\") as HTMLElement\n        this.mount()\n    }\n\n    private mount() {\n        const closeButton = document.querySelector(\".js-tips-layer__close\") as HTMLElement\n        closeButton.addEventListener(\"click\", () => {\n            this.hide()\n        })\n\n        document.addEventListener(\"keydown\", (event) => {\n            if (!this.isShown()) {\n                return\n            }\n\n            if (event.key === \"Escape\") {\n                this.hide()\n            }\n        })\n    }\n\n    public isShown(): boolean {\n        return this.layerElement.classList.contains(\"open\")\n    }\n\n    public show() {\n        if (window.localStorage.getItem(TipsManager.DONT_SHOW_AGAIN_LOCAL_STORAGE_KEY) === \"true\") {\n            return\n        }\n\n        this.layerElement.classList.add(\"open\")\n\n        window.localStorage.setItem(TipsManager.DONT_SHOW_AGAIN_LOCAL_STORAGE_KEY, \"true\")\n    }\n\n    public hide() {\n        this.layerElement.classList.remove(\"open\")\n    }\n}\n", "import {CodeRepository, CodeRepositoryManager, SharedCodeRepository, TextCodeRepository} from \"./Repositories\"\nimport {QueryParams} from \"./QueryParams\"\nimport {HelpManager} from \"./HelpManager\"\nimport {ITheme} from \"./themes\"\nimport {codeIfSharedLinkBroken, ExamplesManager, IExample} from \"./Examples\"\nimport {copyTextToClipboard} from \"./clipboard_util\"\n\nimport {Editor} from \"./Editor/Editor\"\nimport {ThemeManager} from \"./ThemeManager/ThemeManager\"\nimport {\n    getRunConfigurationTypeByShared,\n    RunConfigurationManager,\n    RunConfigurationType\n} from \"./RunConfigurationManager/RunConfigurationManager\"\nimport {CodeRunner, RunnableCodeSnippet, ShareCodeResponse} from \"./CodeRunner/CodeRunner\"\nimport {Terminal} from \"./Terminal/Terminal\"\nimport {TipsManager} from \"./TipsManager\"\n\n/**\n * PlaygroundDefaultAction describes the default action of a playground.\n */\nexport enum PlaygroundDefaultAction {\n    RUN = \"run\",\n    FORMAT = \"format\",\n    SHARE = \"share\",\n    CHANGE_THEME = \"change-theme\",\n}\n\nconst CODE_UNSAVED_KEY = \"unsaved\"\n\n/**\n * Playground is responsible for managing the all playgrounds.\n */\nexport class Playground {\n    private runAsTestConsumer: () => boolean = () => false\n    private readonly wrapperElement: HTMLElement\n    private readonly queryParams: QueryParams\n    private readonly repository: CodeRepository\n    private readonly editor: Editor\n    private readonly cgenEditor: Editor\n    private readonly themeManager: ThemeManager\n    private readonly examplesManager: ExamplesManager\n    private readonly helpManager: HelpManager\n    private readonly runConfigurationManager: RunConfigurationManager\n    private readonly tipsManager: TipsManager\n    private readonly terminal: Terminal\n    private cgenMode: boolean = false\n\n    /**\n     * @param editorElement - The element that will contain the playground.\n     */\n    constructor(editorElement: HTMLElement) {\n        this.wrapperElement = editorElement\n        this.queryParams = new QueryParams(window.location.search)\n        this.repository = CodeRepositoryManager.selectRepository(this.queryParams)\n\n        const terminalElement = editorElement.querySelector(\".js-terminal\") as HTMLElement\n        if (terminalElement === null || terminalElement === undefined) {\n            throw new Error(\"Terminal not found, please check that terminal inside editor element\")\n        }\n\n        this.terminal = new Terminal(terminalElement)\n        this.editor = new Editor(\"main\", editorElement, this.repository, this.terminal, false, \"spawn\")\n        this.cgenEditor = new Editor(\"cgen\", editorElement, new TextCodeRepository(\"\"), this.terminal, true, \"text/x-csrc\")\n        this.cgenEditor.hide()\n\n        this.repository.getCode((snippet) => {\n            if (snippet.code === SharedCodeRepository.CODE_NOT_FOUND) {\n                // If the code is not found, use the default Hello World example.\n                this.editor.setCode(codeIfSharedLinkBroken)\n                this.writeTerminalBuildLog(\"Code for shared link not found.\")\n                return\n            }\n\n            if (snippet.runConfiguration !== undefined) {\n                const runConfiguration = getRunConfigurationTypeByShared(snippet.runConfiguration)\n                this.runConfigurationManager.useConfiguration(runConfiguration)\n            }\n\n            if (snippet.buildArguments !== undefined) {\n                this.runConfigurationManager.setBuildArguments(snippet.buildArguments)\n            }\n\n            if (snippet.runArguments !== undefined) {\n                this.runConfigurationManager.setRunArguments(snippet.runArguments)\n            }\n\n            this.editor.setCode(snippet.code)\n        })\n\n\n        this.themeManager = new ThemeManager(this.queryParams)\n        this.themeManager.registerOnChange((theme: ITheme): void => {\n            this.editor.setTheme(theme)\n            this.cgenEditor.setTheme(theme)\n        })\n        this.themeManager.loadTheme()\n\n        this.examplesManager = new ExamplesManager()\n        this.examplesManager.registerOnSelectHandler((example: IExample): void => {\n            this.editor.setCode(example.code)\n\n            // if the current configuration is Cgen, don't switch to the example's configuration\n            if (this.runConfigurationManager.configuration === RunConfigurationType.Cgen) {\n                // since example changed, C code no longer matches V code\n                this.cgenEditor.clear()\n                this.cgenEditor.setCode(\"Rerun Cgen to see C code\")\n                return\n            }\n\n            this.runConfigurationManager.useConfiguration(example.runConfiguration)\n        })\n        this.examplesManager.mount()\n\n        this.helpManager = new HelpManager(editorElement)\n\n        this.runConfigurationManager = new RunConfigurationManager(this.queryParams)\n        this.runConfigurationManager.registerOnChange((): void => {\n        })\n        this.runConfigurationManager.registerOnSelect((type): void => {\n            this.runConfigurationManager.toggleConfigurationsList()\n\n            if (type === RunConfigurationType.Cgen) {\n                this.cgenEditor.show()\n            }\n\n            this.run()\n        })\n        this.runConfigurationManager.setupConfiguration()\n        this.tipsManager = new TipsManager()\n\n        this.registerAction(\"close-cgen\", () => {\n            this.cgenEditor.hide()\n            this.disableCgenMode()\n        })\n\n        // TODO: uncomment when public bug report feature is ready\n        // this.registerAction(\"create-bug\", () => {\n        //     this.clearTerminal()\n        //     this.openOutputTab()\n        //     this.writeTerminalOutput(\"Creating bug report url...\")\n        //     const url = CodeRunner.createBugUrl(this.editor.getRunnableCodeSnippet(this.runConfigurationManager))\n        //     url.then((resp) => {\n        //         if (resp.error != '') {\n        //             this.writeTerminalOutput(\"Error creating bug report url: \" + resp.error)\n        //             return\n        //         }\n        //         this.writeTerminalOutput(\"Bug report url created, opening GitHub in new tab...\")\n        //\n        //         copyTextToClipboard(resp.link, () => {\n        //             this.writeTerminalOutput(\"Bug report url copied to clipboard\")\n        //         }).then(() => {\n        //             window.open(resp.link, '_blank');\n        //         })\n        //     })\n        // })\n\n        this.terminal.registerCloseHandler(() => {\n            this.closeTerminal()\n        })\n        this.terminal.registerWriteHandler((_) => {\n            this.openTerminal()\n        })\n        this.terminal.registerFilter((line) => {\n            return !line.trim().startsWith(\"Failed command\")\n        })\n        this.terminal.mount()\n        this.closeTerminal()\n    }\n\n    public enableCgenMode() {\n        this.tipsManager.show()\n\n        this.wrapperElement.querySelectorAll(\".playground__editor\").forEach((editor) => {\n            editor.classList.add(\"with-tabs\")\n        })\n\n        this.cgenMode = true\n    }\n\n    public disableCgenMode() {\n        this.wrapperElement.querySelectorAll(\".playground__editor\").forEach((editor) => {\n            editor.classList.remove(\"with-tabs\")\n        })\n\n        this.removeEditorLinesHighlighting()\n        this.cgenMode = false\n    }\n\n    public registerRunAsTestConsumer(consumer: () => boolean): void {\n        this.runAsTestConsumer = consumer\n    }\n\n    /**\n     * Register a handler for the default or new action.\n     * @param name - The name of the action.\n     * @param callback - The callback to be called when the action is triggered.\n     */\n    public registerAction(name: PlaygroundDefaultAction | string, callback: () => void): void {\n        const actionButtons = document.querySelectorAll(`.js-${name}__action`)\n        if (actionButtons.length == 0) {\n            throw new Error(`Can't find any action button with class js-${name}__action`)\n        }\n\n        actionButtons.forEach((actionButton) => {\n            actionButton.addEventListener(\"click\", callback)\n        })\n    }\n\n    public getRunnableCodeSnippet(): RunnableCodeSnippet {\n        return this.editor.getRunnableCodeSnippet(this.runConfigurationManager)\n    }\n\n    public run(): void {\n        const configuration = this.runConfigurationManager.configuration\n        if (configuration === RunConfigurationType.Run) {\n            this.runCode()\n        } else if (configuration === RunConfigurationType.Test) {\n            this.runTest()\n        } else if (configuration === RunConfigurationType.Cgen) {\n            this.enableCgenMode()\n            this.retrieveCgenCode()\n        }\n    }\n\n    public runCode(): void {\n        this.clearTerminal()\n        this.openBuildLogTab()\n        this.writeTerminalBuildLog(\"Running code...\")\n\n        const snippet = this.getRunnableCodeSnippet()\n        CodeRunner.runCode(snippet)\n            .then(result => {\n                if (result.error != \"\") {\n                    throw new Error(`The server returned an error:\\n${result.error}`)\n                }\n\n                this.clearTerminal()\n                this.writeTerminalBuildLog(result.buildOutput)\n                this.writeTerminalOutput(result.output)\n                this.openOutputTab()\n            })\n            .catch(err => {\n                console.log(err)\n                this.writeTerminalBuildLog(`Can't run code. ${err.message}`)\n                this.writeTerminalBuildLog(\"Please try again.\")\n            })\n    }\n\n    public runTest(): void {\n        this.clearTerminal()\n        this.openBuildLogTab()\n        this.writeTerminalBuildLog(\"Running tests...\")\n\n        const snippet = this.getRunnableCodeSnippet()\n        CodeRunner.runTest(snippet)\n            .then(result => {\n                if (result.error != \"\") {\n                    throw new Error(`The server returned an error:\\n${result.error}`)\n                }\n\n                this.clearTerminal()\n                this.writeTerminalBuildLog(result.buildOutput)\n                this.writeTerminalOutput(result.output)\n                this.openOutputTab()\n            })\n            .catch(err => {\n                console.log(err)\n                this.writeTerminalBuildLog(`Can't run tests. ${err.message}`)\n                this.writeTerminalBuildLog(\"Please try again.\")\n            })\n    }\n\n    public retrieveCgenCode(): void {\n        this.clearTerminal()\n        this.openBuildLogTab()\n        this.writeTerminalBuildLog(\"Running retrieving of generated C code...\")\n\n        const snippet = this.getRunnableCodeSnippet()\n        CodeRunner.retrieveCgenCode(snippet)\n            .then(result => {\n                if (result.error != \"\") {\n                    throw new Error(`The server returned an error:\\n${result.error}`)\n                }\n\n                const code = result.cgenCode\n                const lines = code.split(\"\\n\")\n\n                const filteredLines = []\n                const mapping = {}\n\n                for (let i = 0; i < lines.length - 1; i++) {\n                    const line = lines[i]\n                    const next = lines[i + 1]\n                    if (next.startsWith(\"#line\")) {\n                        continue\n                    }\n\n                    if (line.startsWith(\"#line\")) {\n                        if (next.length != 0) {\n                            const parts = line.split(\" \")\n                            const lineNo = parseInt(parts[1])\n                            const file = parts[2]\n                            if (!file.includes(\"main.sp\")) {\n                                continue\n                            }\n                            // @ts-ignore\n                            mapping[lineNo] = next\n                        }\n\n                        continue\n                    }\n\n                    filteredLines.push(line)\n                }\n\n                const resultCode = filteredLines.join(\"\\n\")\n\n                const v2c = {}\n                for (let mappingKey in mapping) {\n                    // @ts-ignore\n                    const line = mapping[mappingKey]\n                    const chenIndex = filteredLines.indexOf(line)\n                    if (chenIndex != -1) {\n                        // @ts-ignore\n                        v2c[mappingKey] = chenIndex\n                    }\n                }\n\n                const lineWithMainMain = filteredLines.find((line) => line.startsWith(\"void main__main(void) {\")) || \"\"\n                let mainIndex = filteredLines.indexOf(lineWithMainMain)\n                if (mainIndex == -1) {\n                    mainIndex = 0\n                }\n\n                window.localStorage.setItem(\"cgen-mapping\", JSON.stringify(v2c))\n\n                this.clearTerminal()\n                this.cgenEditor.show()\n                this.cgenEditor.setCode(resultCode)\n                this.cgenEditor.editor.scrollIntoView({line: mainIndex, ch: 0})\n\n                this.writeTerminalBuildLog(result.buildOutput)\n                this.closeTerminal()\n                if (result.exitCode != 0) {\n                    this.openTerminal()\n                }\n            })\n            .catch(err => {\n                console.log(err)\n                this.writeTerminalBuildLog(`Can't compile and get C code. ${err.message}`)\n                this.writeTerminalBuildLog(\"Please try again.\")\n            })\n    }\n\n    public formatCode(): void {\n        this.clearTerminal()\n\n        const snippet = this.getRunnableCodeSnippet()\n        CodeRunner.formatCode(snippet)\n            .then(result => {\n                if (result.error != \"\") {\n                    throw new Error(`The server returned an error:\\n${result.error}`)\n                }\n\n                this.editor.setCode(result.output, true)\n            })\n            .catch(err => {\n                console.log(err)\n                this.openOutputTab()\n                this.writeTerminalOutput(`Can't format code. ${err.message}`)\n                this.writeTerminalOutput(\"Please try again.\")\n            })\n    }\n\n    public shareCode(): void {\n        this.clearTerminal()\n        this.openOutputTab()\n\n        const snippet = this.getRunnableCodeSnippet()\n        console.log(snippet)\n        CodeRunner.shareCode(snippet)\n            .then(result => {\n                if (result.error != \"\") {\n                    throw new Error(`The server returned an error:\\n${result.error}`)\n                }\n\n                this.writeTerminalOutput(\"Code shared successfully!\")\n\n                const link = this.buildShareLink(result)\n                this.writeTerminalOutput(\"Share link: \" + link)\n\n                copyTextToClipboard(link, () => {\n                    this.writeTerminalOutput(\"\\nLink copied to clipboard.\")\n                })\n            })\n            .catch(err => {\n                console.log(err)\n                this.writeTerminalOutput(`Can't share code. ${err.message}`)\n                this.writeTerminalOutput(\"Please try again.\")\n            })\n    }\n\n    private buildShareLink(result: ShareCodeResponse) {\n        return `https://spawnlang.dev/p/${result.hash}`\n    }\n\n    public changeTheme(): void {\n        this.themeManager.toggleTheme()\n    }\n\n    public setupShortcuts(): void {\n        this.editor.editor.on(\"keypress\", (cm, event) => {\n            if (!cm.state.completionActive && // Enables keyboard navigation in autocomplete list\n                event.key.length === 1 && event.key.match(/[a-z0-9]/i)) { // Only letters and numbers trigger autocomplete\n                this.editor.showCompletion()\n            }\n        })\n\n        this.editor.editor.on(\"mousedown\", (instance) => {\n            if (!this.cgenMode) {\n                return\n            }\n\n            setTimeout(() => {\n                this.removeEditorLinesHighlighting()\n\n                const cursor = instance.getCursor()\n                const line = cursor.line + 1\n                const mappingString = window.localStorage.getItem(\"cgen-mapping\") ?? \"{}\"\n                const mapping = JSON.parse(mappingString)\n\n                const cgenLine = mapping[line]\n                if (cgenLine === undefined) {\n                    return\n                }\n\n                this.cgenEditor.editor.scrollIntoView({line: cgenLine, ch: 0})\n                console.log(cgenLine)\n\n                this.cgenEditor.editor.addLineClass(cgenLine, \"text\", \"cgen-highlight\")\n                window.localStorage.setItem(\"highlighted-c-line\", cgenLine.toString())\n\n                this.editor.editor.addLineClass(cursor.line, \"text\", \"cgen-highlight\")\n                window.localStorage.setItem(\"highlighted-v-line\", cursor.line.toString())\n\n                this.editor.editor.focus()\n            }, 100)\n        })\n\n        document.addEventListener(\"keydown\", ev => {\n            const isCodeFromShareURL = this.repository instanceof SharedCodeRepository\n\n            if (isCodeFromShareURL && !ev.ctrlKey && !ev.metaKey) {\n                this.markCodeAsUnsaved()\n            }\n\n            const isCtrlEnter = ev.ctrlKey && ev.key === \"Enter\"\n            const isCtrlR = ev.ctrlKey && ev.key === \"r\"\n            const isShiftEnter = ev.shiftKey && ev.key === \"Enter\"\n\n            if (isCtrlEnter || isCtrlR || isShiftEnter) {\n                this.run()\n                ev.preventDefault()\n            } else if (ev.ctrlKey && ev.key === \"l\") {\n                this.formatCode()\n                ev.preventDefault()\n            } else if (ev.ctrlKey && (ev.key === \"=\" || ev.key === \"+\")) {\n                this.editor.changeEditorFontSize(1)\n                ev.preventDefault()\n            } else if (ev.ctrlKey && ev.key === \"-\") {\n                this.editor.changeEditorFontSize(-1)\n                ev.preventDefault()\n            } else if (ev.ctrlKey && ev.key === \"i\") {\n                this.helpManager.toggleHelp()\n                ev.preventDefault()\n            } else if (ev.ctrlKey && ev.key === \"t\") {\n                this.toggleTerminal()\n                ev.preventDefault()\n            } else if ((ev.ctrlKey || ev.metaKey) && ev.key === \"s\") {\n                this.editor.saveCode()\n                ev.preventDefault()\n            } else if (ev.key === \"Escape\") {\n                this.helpManager.closeHelp()\n                ev.preventDefault()\n            } else {\n                this.editor.saveCode()\n            }\n        })\n    }\n\n    private removeEditorLinesHighlighting() {\n        const prevHighlightedLine = window.localStorage.getItem(\"highlighted-c-line\")\n        if (prevHighlightedLine != undefined) {\n            this.cgenEditor.editor.removeLineClass(parseInt(prevHighlightedLine), \"text\", \"cgen-highlight\")\n        }\n\n        const prevVlangHighlightedLine = window.localStorage.getItem(\"highlighted-v-line\")\n        if (prevVlangHighlightedLine != undefined) {\n            this.editor.editor.removeLineClass(parseInt(prevVlangHighlightedLine), \"text\", \"cgen-highlight\")\n        }\n    }\n\n    public askLoadUnsavedCode() {\n        const isCodeFromShareURL = this.repository instanceof SharedCodeRepository\n        const hasUnsavedCode = window.localStorage.getItem(CODE_UNSAVED_KEY) != null\n\n        window.localStorage.removeItem(CODE_UNSAVED_KEY)\n\n        if (isCodeFromShareURL && hasUnsavedCode) {\n            const yes = confirm(\"You load the code from the link, but you have previously unsaved changes. Do you want to load it instead of code from link?\")\n\n            if (yes) {\n                this.queryParams.updateURLParameter(SharedCodeRepository.QUERY_PARAM_NAME, null)\n                window.location.reload()\n            }\n        }\n    }\n\n    public clearTerminal(): void {\n        this.terminal.clear()\n    }\n\n    public writeTerminalOutput(text: string): void {\n        this.terminal.writeOutput(text)\n    }\n\n    public writeTerminalBuildLog(text: string): void {\n        this.terminal.write(text)\n    }\n\n    public openOutputTab(): void {\n        this.terminal.openOutputTab()\n    }\n\n    public openBuildLogTab(): void {\n        this.terminal.openBuildLogTab()\n    }\n\n    public toggleTerminal() {\n        if (this.wrapperElement.classList.contains(\"closed-terminal\")) {\n            this.openTerminal()\n        } else {\n            this.closeTerminal()\n        }\n    }\n\n    public openTerminal() {\n        this.wrapperElement.classList.remove(\"closed-terminal\")\n    }\n\n    public closeTerminal() {\n        this.wrapperElement.classList.add(\"closed-terminal\")\n        this.editor.refresh()\n    }\n\n    private markCodeAsUnsaved() {\n        window.localStorage.setItem(CODE_UNSAVED_KEY, \"\")\n    }\n}\n", "import \"./spawn\"\nimport \"./spawn-hint\"\n\nimport { Playground, PlaygroundDefaultAction } from \"./Playground\"\nimport {CodeRunner} from \"./CodeRunner/CodeRunner\";\n\nCodeRunner.getSpawnVersion().then(resp => {\n    const versionElement = document.querySelector('.js-version-info') as HTMLElement\n    versionElement.innerHTML = resp.version\n})\n\nconst editorElement = document.querySelector('.js-playground') as HTMLElement\nconst playground = new Playground(editorElement)\n\nplayground.registerAction(PlaygroundDefaultAction.RUN, () => {\n    playground.run()\n})\n\nplayground.registerAction(PlaygroundDefaultAction.FORMAT, () => {\n    playground.formatCode()\n})\n\nplayground.registerAction(PlaygroundDefaultAction.SHARE, () => {\n    playground.shareCode()\n})\n\nplayground.registerAction(PlaygroundDefaultAction.CHANGE_THEME, () => {\n    playground.changeTheme()\n})\n\nplayground.registerRunAsTestConsumer(() => {\n    const runButton = document.querySelector('.js-run__action') as HTMLButtonElement;\n    const configurationType = runButton.getAttribute(\"data-type\");\n    return configurationType === \"Test\"\n})\n\nplayground.setupShortcuts()\nplayground.askLoadUnsavedCode()\n\nwindow.onload = () => {\n    const html = document.querySelector(\"html\") as HTMLElement;\n    html.style.opacity = '1'\n}\n"],
  "mappings": "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E,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,GAA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,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,KAAK,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,aAAa,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,uBAAuB,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CA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,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE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",
  "names": ["Context", "indentation", "column", "type", "align", "prev", "knownImports", "keywords", "pseudoKeywords", "atoms", "builtinTypes", "config", "indentUnit", "isOperatorChar", "curPunc", "eatIdentifier", "stream", "tokenBase", "state", "ch", "tokenString", "next", "tokenRawString", "tokenComment", "wasDot", "cur", "after", "tokenLongInterpolation", "tokenNextInterpolation", "tokenNextEscape", "isValidEscapeChar", "quote", "escaped", "end", "maybeEnd", "pushContext", "popContext", "t", "ctx", "style", "textAfter", "closing", "Pos", "computeCompletionVariants", "editor", "context", "cur", "token", "knownImports", "i", "lineTokens", "tkn", "len", "prevToken", "getCompletions", "variants", "tokenValue", "addCompletionVariant", "variant", "variantText", "f", "lastToken", "tok", "index", "prev", "name", "endSignatureToken", "t", "signatureTokens", "signature", "backward", "next", "text", "backwardCount", "cursor", "startSelection", "endSelection", "keywords", "pseudoKeywords", "atoms", "builtinTypes", "count", "pos", "hintHelper", "_SharedCodeRepository", "hash", "_", "onReady", "data", "resp", "err", "SharedCodeRepository", "__publicField", "TextCodeRepository", "text", "_", "onReady", "_LocalCodeRepository", "code", "onReady", "localCode", "LocalCodeRepository", "__publicField", "Base64CodeRepository", "text", "_", "onReady", "__publicField", "GithubGistCodeRepository", "id", "_", "onReady", "resp", "data", "files", "firstKey", "url", "r", "err", "__publicField", "CodeRepositoryManager", "params", "config", "SharedCodeRepository", "TextCodeRepository", "repository", "LocalCodeRepository", "hash", "base64Code", "Base64CodeRepository", "gistId", "GithubGistCodeRepository", "QueryParams", "path", "param", "value", "url", "parsedUrl", "_HelpManager", "containingElement", "shortcut", "HelpManager", "__publicField", "RunConfigurationType", "toSharedRunConfiguration", "runConfigurationType", "getRunConfigurationTypeByShared", "sharedRunConfiguration", "getRunConfigurationTypeByString", "_RunConfigurationManager", "queryParams", "callback", "configurationFromQuery", "buildArgumentsFromLocalStorage", "runArgumentsFromLocalStorage", "configurationFromLocalStorage", "runConfigurationAsString", "arg", "args", "event", "configuration", "configurationTypeString", "configurationType", "RunConfigurationManager", "__publicField", "examples", "LocalCodeRepository", "example", "codeIfSharedLinkBroken", "_ExamplesManager", "handler", "examplesSelectList", "examplesButton", "examples", "example", "index", "examplesButtonSpan", "dropdownItems", "option", "exampleName", "dropdownBtn", "dropdownInput", "dropdownList", "e", "el", "dropdownBtnSpan", "ExamplesManager", "__publicField", "name", "className", "fallbackCopyTextToClipboard", "text", "textArea", "msg", "err", "copyTextToClipboard", "onCopy", "RunnableCodeSnippet", "code", "buildArguments", "runArguments", "runConfiguration", "data", "CodeRunner", "snippet", "resp1", "resp", "kind", "response", "base", "responseStatus", "_Editor", "id", "wrapper", "repository", "terminal", "readOnly", "mode", "editorConfig", "fontSize", "delta", "cm", "newFontSize", "size", "code", "preserveCursor", "cursor", "SharedCodeRepository", "LocalCodeRepository", "runConfiguration", "RunnableCodeSnippet", "toSharedRunConfiguration", "theme", "realEditorElement", "Editor", "__publicField", "Dark", "Light", "_ThemeManager", "Dark", "Light", "queryParams", "predefinedTheme", "callback", "themeFromQuery", "theme", "themeFromLocalStorage", "defaultTheme", "foundThemes", "button", "svgSun", "svgMoon", "ThemeManager", "__publicField", "decode_data_html_default", "c", "decode_data_xml_default", "c", "decodeMap", "fromCodePoint", "_a", "codePoint", "output", "replaceCodePoint", "CharCodes", "TO_LOWER_BIT", "BinTrieFlags", "isNumber", "code", "isHexadecimalCharacter", "isAsciiAlphaNumeric", "isEntityInAttributeInvalidEnd", "EntityDecoderState", "DecodingMode", "EntityDecoder", "decodeTree", "emitCodePoint", "errors", "decodeMode", "str", "offset", "start", "end", "base", "digitCount", "startIdx", "char", "lastCp", "expectedLength", "_a", "replaceCodePoint", "current", "valueLength", "determineBranch", "result", "consumed", "getDecoder", "ret", "decoder", "fromCodePoint", "lastIndex", "len", "nodeIdx", "branchCount", "jumpOffset", "value", "lo", "hi", "mid", "midVal", "htmlDecoder", "decode_data_html_default", "xmlDecoder", "decode_data_xml_default", "restoreDiff", "arr", "i", "encode_html_default", "xmlReplacer", "xmlCodeMap", "getCodePoint", "str", "index", "c", "encodeXML", "ret", "lastIdx", "match", "i", "char", "next", "getEscaper", "regex", "map", "data", "match", "lastIdx", "result", "escapeUTF8", "xmlCodeMap", "escapeAttribute", "escapeText", "EntityLevel", "EncodingMode", "defaults", "getDefaultColors", "colors", "range", "red", "green", "blue", "setStyleColor", "gray", "c", "l", "toHexString", "r", "g", "b", "toColorHexString", "num", "str", "ref", "results", "generateOutput", "stack", "token", "data", "options", "result", "pushText", "handleDisplay", "pushForegroundColor", "pushBackgroundColor", "handleRgb", "operation", "rgb", "value", "pushStyle", "codeStr", "code", "codeMap", "resetStyles", "pushTag", "closeTag", "stackClone", "tag", "low", "high", "j", "notCategory", "category", "e", "categoryForCode", "text", "encodeXML", "style", "pushTagWithClass", "classes", "color", "last", "tokenize", "callback", "ansiMatch", "ansiHandler", "remove", "removeXterm256Foreground", "m", "g1", "removeXterm256Background", "newline", "ansiMess", "g2", "realText", "tokens", "process", "handler", "i", "results1", "length", "outer", "o", "len", "updateStickyStack", "stickyStack", "Filter", "input", "buf", "element", "output", "Terminal", "element", "handler", "filter", "name", "tabsInput", "text", "buildLog", "lines", "outputElement", "newText", "line", "Filter", "closeButton", "input", "header", "mouseDown", "e", "_TipsManager", "event", "TipsManager", "__publicField", "CODE_UNSAVED_KEY", "Playground", "editorElement", "QueryParams", "CodeRepositoryManager", "terminalElement", "Terminal", "Editor", "TextCodeRepository", "snippet", "SharedCodeRepository", "codeIfSharedLinkBroken", "runConfiguration", "getRunConfigurationTypeByShared", "ThemeManager", "theme", "ExamplesManager", "example", "HelpManager", "RunConfigurationManager", "type", "TipsManager", "_", "line", "editor", "consumer", "name", "callback", "actionButtons", "actionButton", "configuration", "CodeRunner", "result", "err", "lines", "filteredLines", "mapping", "i", "next", "parts", "lineNo", "resultCode", "v2c", "mappingKey", "chenIndex", "lineWithMainMain", "mainIndex", "link", "copyTextToClipboard", "cm", "event", "instance", "cursor", "mappingString", "cgenLine", "ev", "isCtrlEnter", "isCtrlR", "isShiftEnter", "prevHighlightedLine", "prevVlangHighlightedLine", "isCodeFromShareURL", "hasUnsavedCode", "text", "CodeRunner", "resp", "versionElement", "editorElement", "playground", "Playground", "html"]
}
